{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20,\n      class: \"top\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        icon: $setup.DocumentAdd,\n        onClick: _cache[0] || (_cache[0] = $event => $setup.handleAddDialog())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"添加题目类型\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table, {\n      data: $setup.tableData,\n      stripe: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"100\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"content\",\n        label: \"问题\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"描述\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyCateId\",\n        label: \"分类ID\",\n        width: \"200\",\n        formatter: $setup.cateFormatter\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyItemIds\",\n        label: \"选项ID\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"action\",\n        label: \"操作\",\n        width: \"200\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(scope => [_createCommentVNode(\"                    <el-button type=\\\"primary\\\" :icon=\\\"Edit\\\" :disabled=\\\"scope.row.status == '7' ? false : true\\\"\"), _createCommentVNode(\"                               @click=\\\"handleEditDialog(scope.row.id)\\\">\"), _createCommentVNode(\"                    </el-button>\"), _createCommentVNode(\"                    <el-button type=\\\"danger\\\" :icon=\\\"Delete\\\"\"), _createCommentVNode(\"                               @click=\\\"handleDelete(scope.row.id)\\\">\"), _createCommentVNode(\"                    </el-button>\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"AddDialog\"], {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible = $event),\n    dialogVisible: $setup.dialogVisible,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"dialogVisible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_el_card","_component_el_row","gutter","class","_component_el_button","type","icon","$setup","DocumentAdd","onClick","_cache","$event","handleAddDialog","_component_el_table","data","tableData","stripe","style","_component_el_table_column","prop","label","width","formatter","cateFormatter","fixed","scope","_createCommentVNode","dialogVisible","onInitList","initList"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\question\\index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-row :gutter=\"20\" class=\"top\">\r\n            <el-button type=\"primary\" :icon=\"DocumentAdd\" @click=\"handleAddDialog()\">添加题目类型</el-button>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\r\n            <el-table-column prop=\"content\" label=\"问题\" width=\"200\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" width=\"200\" />\r\n            <el-table-column prop=\"surveyCateId\" label=\"分类ID\" width=\"200\" :formatter=\"cateFormatter\"/>\r\n            <el-table-column prop=\"surveyItemIds\" label=\"选项ID\" width=\"200\" />\r\n            <el-table-column prop=\"action\" label=\"操作\" width=\"200\" fixed=\"right\">\r\n                <template v-slot=\"scope\">\r\n<!--                    <el-button type=\"primary\" :icon=\"Edit\" :disabled=\"scope.row.status == '7' ? false : true\"-->\r\n<!--                               @click=\"handleEditDialog(scope.row.id)\">-->\r\n<!--                    </el-button>-->\r\n<!--                    <el-button type=\"danger\" :icon=\"Delete\"-->\r\n<!--                               @click=\"handleDelete(scope.row.id)\">-->\r\n<!--                    </el-button>-->\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <AddDialog v-model=\"dialogVisible\"\r\n               :dialogVisible=\"dialogVisible\"\r\n               @initList=\"initList\"\r\n    ></AddDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {Delete, DocumentAdd, Edit} from \"@element-plus/icons-vue\";\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport AddDialog from \"@/views/question/components/add\";\r\nimport EditDialog from \"@/views/question/components/edit\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\n\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-question/all');\r\n    tableData.value = res.data.data.surveyQuestions;\r\n}\r\ninitList();\r\nconst handleAddDialog = () => {\r\n    dialogVisible.value = true;\r\n}\r\nconst cateFormatter = async (row) => {\r\n    // switch (row.surveyCateId) {\r\n    //\r\n    // }\r\n    const res = await axios.get('/api/survey-cate/one/' + row.surveyCateId);\r\n\r\n    // return res.data.data.surveyCate.cateName;\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.top {\r\n  padding-bottom: 30px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"],"mappings":";;;;;;;6DACIA,YAAA,CAqBUC,kBAAA;sBApBN,MAES,CAFTD,YAAA,CAESE,iBAAA;MAFAC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAC;;wBACvB,MAA2F,CAA3FJ,YAAA,CAA2FK,oBAAA;QAAhFC,IAAI,EAAC,SAAS;QAAEC,IAAI,EAAEC,MAAA,CAAAC,WAAW;QAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,eAAe;;0BAAI,MAAM,C,iBAAN,QAAM,E;;;;QAEnFb,YAAA,CAgBWc,mBAAA;MAhBAC,IAAI,EAAEP,MAAA,CAAAQ,SAAS;MAAEC,MAAM,EAAN,EAAM;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBAC/B,MAAoD,CAApDlB,YAAA,CAAoDmB,0BAAA;QAAnCC,IAAI,EAAC,IAAI;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5CtB,YAAA,CAAyDmB,0BAAA;QAAxCC,IAAI,EAAC,SAAS;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UACjDtB,YAAA,CAA6DmB,0BAAA;QAA5CC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UACrDtB,YAAA,CAA0FmB,0BAAA;QAAzEC,IAAI,EAAC,cAAc;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC,KAAK;QAAEC,SAAS,EAAEf,MAAA,CAAAgB;UAC1ExB,YAAA,CAAiEmB,0BAAA;QAAhDC,IAAI,EAAC,eAAe;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UACzDtB,YAAA,CASkBmB,0BAAA;QATDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC,KAAK;QAACG,KAAK,EAAC;;0BACtCC,KAAK,KACvCC,mBAAA,uHAAoH,EACpHA,mBAAA,6EAA8E,EAC9EA,mBAAA,oCAAuC,EACvCA,mBAAA,mEAAkE,EAClEA,mBAAA,yEAA0E,EAC1EA,mBAAA,oCAAuC,C;;;;;;;MAKnC3B,YAAA,CAGaQ,MAAA;gBAHOA,MAAA,CAAAoB,aAAa;+DAAbpB,MAAA,CAAAoB,aAAa,GAAAhB,MAAA;IACrBgB,aAAa,EAAEpB,MAAA,CAAAoB,aAAa;IAC5BC,UAAQ,EAAErB,MAAA,CAAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}