{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport { Delete } from '@element-plus/icons-vue';\nexport default {\n  __name: 'editItems',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    id: {\n      type: Number,\n      default: -1,\n      required: true\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: emits\n  }) {\n    __expose();\n    const props = __props;\n    const formRef = ref(null);\n    const form = ref({\n      productId: -1,\n      ingredientId: '',\n      number: ''\n    });\n    const rules = ref({\n      ingredientId: [{\n        required: true,\n        message: '请选择要添加的原料'\n      }],\n      number: [{\n        required: true,\n        message: '请输入原料数量'\n      }, {\n        type: 'number',\n        message: '必须是数值类型',\n        transform: value => Number(value)\n      }]\n    });\n    const tableData = ref([]);\n    const handleIngredientChange = id => {\n      let item = ingredientSelectList.value.find(function (i) {\n        return i.id === id;\n      });\n      unit.value = item.unit;\n    };\n    const initIngredientSelectList = async () => {\n      const res = await axios.get('good-serv/admin/ingredient/getSelectList');\n      ingredientSelectList.value = res.data.result;\n    };\n    initIngredientSelectList();\n    const initIngredientList = async productId => {\n      const res = await axios.get('good-serv/admin/ingredient/listByProduct/' + productId);\n      tableData.value = res.data.result;\n    };\n    watch(() => props.dialogVisible, () => {\n      let id = props.productId;\n      form.value.productId = id;\n      console.log(id);\n      console.log(props.dialogVisible);\n      if (props.dialogVisible === true) {\n        initIngredientList(id);\n      }\n    });\n    const handleConfirm = async () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          let res = await axios.post('good-serv/admin/ingredient/addToProduct', form.value);\n          if (res.data.code === 200) {\n            ElMessage.success(\"执行成功！\");\n            formRef.value.resetFields();\n            initIngredientList(props.productId);\n          } else {\n            ElMessage.error(res.data.msg);\n          }\n        }\n      });\n    };\n    const handleDelete = id => {\n      ElMessageBox.confirm('您确定要删除这条记录吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let res = await axios.get('good-serv/admin/ingredient/deleteFromProduct/' + id);\n        if (res.data.code === 200) {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          });\n          initIngredientList(props.productId);\n        } else {\n          ElMessage({\n            type: 'error',\n            message: res.data.msg\n          });\n        }\n      }).catch(() => {});\n    };\n    const handleClose = () => {\n      formRef.value.resetFields();\n      form.value = {\n        productId: -1,\n        ingredient: ''\n      };\n      emits('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      formRef,\n      form,\n      rules,\n      tableData,\n      handleIngredientChange,\n      initIngredientSelectList,\n      initIngredientList,\n      emits,\n      handleConfirm,\n      handleDelete,\n      handleClose,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Delete() {\n        return Delete;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","axios","ElMessage","ElMessageBox","Delete","formRef","form","productId","ingredientId","number","rules","required","message","type","transform","value","Number","tableData","handleIngredientChange","id","item","ingredientSelectList","find","i","unit","initIngredientSelectList","res","get","data","result","initIngredientList","props","dialogVisible","console","log","handleConfirm","validate","valid","post","code","success","resetFields","error","msg","handleDelete","confirm","confirmButtonText","cancelButtonText","then","catch","handleClose","ingredient","emits"],"sources":["D:/vue_project/survey-vue/src/views/question/components/editItems.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n        model-value=\"dialogVisible\"\r\n        title=\"选项管理\"\r\n        width=\"50%\"\r\n        @close=\"handleClose\"\r\n        center\r\n    >\r\n        <el-form\r\n            ref=\"formRef\"\r\n            :model=\"form\"\r\n            :rules=\"rules\"\r\n            label-width=\"100px\"\r\n            style=\"text-align: center\"\r\n        >\r\n            <el-form-item label=\"选项内容\" prop=\"item\">\r\n                <el-input placeholder=\"格式如：A、学生\" v-model=\"form.item\" style=\"width: 100px\"/>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleConfirm\">添加</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        请选择要加入改题目的选项：\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"50\" />\r\n            <el-table-column prop=\"item\" label=\"选项内容\" width=\"200\" />\r\n            <el-table-column prop=\"action\" label=\"操作\" width=\"100\" >\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"danger\" :icon=\"Delete\"\r\n                               @click=\"handleDelete(scope.row.id)\"></el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport {Delete} from '@element-plus/icons-vue'\r\n\r\nconst props = defineProps(\r\n    {\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        }\r\n    }\r\n);\r\nconst formRef = ref(null);\r\nconst form = ref({\r\n    productId: -1,\r\n    ingredientId: '',\r\n    number: ''\r\n});\r\nconst rules = ref({\r\n    ingredientId: [\r\n        {\r\n            required: true,\r\n            message: '请选择要添加的原料'\r\n        }\r\n    ],\r\n    number: [\r\n        {\r\n            required: true,\r\n            message: '请输入原料数量'\r\n        },\r\n        {\r\n            type:'number',\r\n            message: '必须是数值类型',\r\n            transform: (value) => Number(value)\r\n        }\r\n    ]\r\n});\r\nconst tableData = ref([]);\r\n\r\nconst handleIngredientChange = (id) => {\r\n    let item = ingredientSelectList.value.find(function (i) {\r\n        return i.id === id;\r\n    });\r\n    unit.value = item.unit;\r\n}\r\nconst initIngredientSelectList = async () => {\r\n    const res = await axios.get('good-serv/admin/ingredient/getSelectList');\r\n    ingredientSelectList.value = res.data.result;\r\n}\r\ninitIngredientSelectList();\r\nconst initIngredientList = async (productId) => {\r\n    const res = await axios.get('good-serv/admin/ingredient/listByProduct/' + productId);\r\n    tableData.value = res.data.result;\r\n};\r\nwatch(\r\n    () => props.dialogVisible,\r\n    () => {\r\n        let id = props.productId;\r\n        form.value.productId = id;\r\n        console.log(id)\r\n        console.log(props.dialogVisible)\r\n        if (props.dialogVisible === true) {\r\n            initIngredientList(id);\r\n        }\r\n    },\r\n);\r\nconst emits = defineEmits(['update:modelValue']);\r\nconst handleConfirm = async () => {\r\n    formRef.value.validate(async(valid)=>{\r\n        if(valid){\r\n            let res = await axios.post('good-serv/admin/ingredient/addToProduct', form.value);\r\n            if (res.data.code === 200) {\r\n                ElMessage.success(\"执行成功！\");\r\n                formRef.value.resetFields();\r\n                initIngredientList(props.productId);\r\n            } else {\r\n                ElMessage.error(res.data.msg);\r\n            }\r\n        }\r\n    })\r\n}\r\nconst handleDelete = (id) =>{\r\n    ElMessageBox.confirm(\r\n        '您确定要删除这条记录吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    )\r\n        .then(async() => {\r\n            let res=await axios.get('good-serv/admin/ingredient/deleteFromProduct/'+id)\r\n            if(res.data.code === 200){\r\n                ElMessage({\r\n                    type: 'success',\r\n                    message: '删除成功',\r\n                });\r\n                initIngredientList(props.productId);\r\n            }else{\r\n                ElMessage({\r\n                    type: 'error',\r\n                    message: res.data.msg,\r\n                });\r\n            }\r\n        })\r\n        .catch(() => {\r\n        })\r\n}\r\nconst handleClose = () => {\r\n    formRef.value.resetFields();\r\n    form.value = {\r\n        productId: -1,\r\n        ingredient: ''\r\n    };\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: #409eff;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}