{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { Edit } from \"@element-plus/icons-vue\";\nimport SurveyDialog from \"@/views/survey/components/surveyDialog\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const tableData = ref([]);\n    const dialogVisible = ref(false);\n    const assemblyId = ref(-1);\n    const surveyQuestionIds = ref(\"0\");\n    const initList = async () => {\n      const res = await axios.get('/api/survey-assembly/all');\n      tableData.value = res.data.data.surveyAssemblys;\n    };\n    initList();\n    const handleOnClick = async (id, password, surveyQuestionIds) => {\n      console.log(\"password\", password);\n      if (typeof password === 'undefined' || password == null || password === '') {\n        assemblyId.value = id;\n        dialogVisible.value = true;\n        surveyQuestionIds.value = surveyQuestionIds;\n      } else {\n        ElMessageBox.prompt('请输入问卷密码', '身份验证', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消'\n        }).then(({\n          value\n        }) => {\n          if (value === password) {\n            console.log(\"密码正确\");\n            ElMessage({\n              type: 'success',\n              message: '密码正确'\n            });\n            assemblyId.value = id;\n            dialogVisible.value = true;\n            surveyQuestionIds.value = surveyQuestionIds;\n          }\n        }).catch(() => {});\n      }\n    };\n    const __returned__ = {\n      tableData,\n      dialogVisible,\n      assemblyId,\n      surveyQuestionIds,\n      initList,\n      handleOnClick,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get Edit() {\n        return Edit;\n      },\n      get SurveyDialog() {\n        return SurveyDialog;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","Edit","SurveyDialog","ElMessage","ElMessageBox","tableData","dialogVisible","assemblyId","surveyQuestionIds","initList","res","get","value","data","surveyAssemblys","handleOnClick","id","password","console","log","prompt","confirmButtonText","cancelButtonText","then","type","message","catch"],"sources":["D:/vue_project/survey-vue/src/views/survey/index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"name\" label=\"问卷名称\" width=\"250\" />\r\n            <el-table-column prop=\"surveyQuestonIds\" label=\"题目ID\" width=\"250\" />\r\n            <el-table-column prop=\"published\" label=\"问卷状态\" width=\"250\" />\r\n            <el-table-column prop=\"action\" label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handleOnClick(scope.row.id, scope.row.password, scope.row.surveyQuestionIds)\">\r\n                        去答题\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <SurveyDialog v-model=\"dialogVisible\"\r\n                  :id=\"assemblyId\"\r\n                  :dialogVisible=\"dialogVisible\"\r\n                  :surveyQuestionIds=\"surveyQuestionIds\"\r\n                  @initList=\"initList\"\r\n    ></SurveyDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {Edit} from \"@element-plus/icons-vue\";\r\nimport SurveyDialog from \"@/views/survey/components/surveyDialog\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\nconst assemblyId = ref(-1);\r\nconst surveyQuestionIds = ref(\"0\");\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-assembly/all');\r\n    tableData.value = res.data.data.surveyAssemblys;\r\n}\r\ninitList();\r\nconst handleOnClick = async (id, password, surveyQuestionIds) => {\r\n    console.log(\"password\",password)\r\n    if (typeof password === 'undefined' || password == null || password === '') {\r\n        assemblyId.value = id;\r\n        dialogVisible.value = true;\r\n        surveyQuestionIds.value= surveyQuestionIds;\r\n    } else {\r\n        ElMessageBox.prompt('请输入问卷密码', '身份验证', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消'\r\n        })\r\n            .then(({ value }) => {\r\n                if (value === password) {\r\n                    console.log(\"密码正确\")\r\n                    ElMessage({\r\n                        type: 'success',\r\n                        message: '密码正确',\r\n                    });\r\n                    assemblyId.value = id;\r\n                    dialogVisible.value = true;\r\n                    surveyQuestionIds.value= surveyQuestionIds;\r\n                }\r\n            })\r\n            .catch(() => {\r\n\r\n            })\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA2BA,SAAQA,GAAG,QAAO,KAAK;AACvB,OAAOC,KAAK,MAAM,cAAc;AAChC,SAAQC,IAAI,QAAO,yBAAyB;AAC5C,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAAQC,SAAS,EAAEC,YAAY,QAAO,cAAc;;;;;;;IAEpD,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,aAAa,GAAGP,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMQ,UAAU,GAAGR,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAMS,iBAAiB,GAAGT,GAAG,CAAC,GAAG,CAAC;IAClC,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,0BAA0B,CAAC;MACvDN,SAAS,CAACO,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,eAAe;IACnD,CAAC;IACDL,QAAQ,CAAC,CAAC;IACV,MAAMM,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,EAAET,iBAAiB,KAAK;MAC7DU,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;MAChC,IAAI,OAAOA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,IAAI,IAAI,IAAIA,QAAQ,KAAK,EAAE,EAAE;QACxEV,UAAU,CAACK,KAAK,GAAGI,EAAE;QACrBV,aAAa,CAACM,KAAK,GAAG,IAAI;QAC1BJ,iBAAiB,CAACI,KAAK,GAAEJ,iBAAiB;MAC9C,CAAC,MAAM;QACHJ,YAAY,CAACgB,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE;UACnCC,iBAAiB,EAAE,IAAI;UACvBC,gBAAgB,EAAE;QACtB,CAAC,CAAC,CACGC,IAAI,CAAC,CAAC;UAAEX;QAAM,CAAC,KAAK;UACjB,IAAIA,KAAK,KAAKK,QAAQ,EAAE;YACpBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;YACnBhB,SAAS,CAAC;cACNqB,IAAI,EAAE,SAAS;cACfC,OAAO,EAAE;YACb,CAAC,CAAC;YACFlB,UAAU,CAACK,KAAK,GAAGI,EAAE;YACrBV,aAAa,CAACM,KAAK,GAAG,IAAI;YAC1BJ,iBAAiB,CAACI,KAAK,GAAEJ,iBAAiB;UAC9C;QACJ,CAAC,CAAC,CACDkB,KAAK,CAAC,MAAM,CAEb,CAAC,CAAC;MACV;IACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}