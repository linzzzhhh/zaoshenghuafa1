{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $setup.tableData,\n      stripe: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"问卷名称\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyQuestonIds\",\n        label: \"题目ID\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"published\",\n        label: \"问卷状态\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"action\",\n        label: \"操作\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"danger\",\n          disabled: scope.row.published === '未发布' ? false : true,\n          onClick: $event => $setup.handlePublished(scope.row)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 发布 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"disabled\", \"onClick\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          icon: $setup.Edit,\n          disabled: scope.row.published === '未发布' ? true : false,\n          onClick: $event => $setup.handleSurveyDialog(scope.row.id, scope.row.password, scope.row.surveyQuestonIds)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 去答题 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"icon\", \"disabled\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"SurveyDialog\"], {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.dialogVisible = $event),\n    id: $setup.assemblyId,\n    dialogVisible: $setup.dialogVisible,\n    surveyQuestionIds: $setup.questionIds,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"dialogVisible\", \"surveyQuestionIds\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_el_card","_component_el_table","data","$setup","tableData","stripe","style","_component_el_table_column","prop","label","width","scope","_component_el_button","type","disabled","row","published","onClick","$event","handlePublished","icon","Edit","handleSurveyDialog","id","password","surveyQuestonIds","dialogVisible","assemblyId","surveyQuestionIds","questionIds","onInitList","initList"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\survey\\index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"name\" label=\"问卷名称\" width=\"250\" />\r\n            <el-table-column prop=\"surveyQuestonIds\" label=\"题目ID\" width=\"250\" />\r\n            <el-table-column prop=\"published\" label=\"问卷状态\" width=\"250\" />\r\n            <el-table-column prop=\"action\" label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"danger\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handlePublished(scope.row)\">\r\n                        发布\r\n                    </el-button>\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? true : false\"\r\n                               @click=\"handleSurveyDialog(scope.row.id, scope.row.password, scope.row.surveyQuestonIds)\">\r\n                        去答题\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <SurveyDialog v-model=\"dialogVisible\"\r\n                  :id=\"assemblyId\"\r\n                  :dialogVisible=\"dialogVisible\"\r\n                  :surveyQuestionIds=\"questionIds\"\r\n                  @initList=\"initList\"\r\n    ></SurveyDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {Edit} from \"@element-plus/icons-vue\";\r\nimport SurveyDialog from \"@/views/survey/components/surveyDialog\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\nconst assemblyId = ref(-1);\r\nconst questionIds = ref(\"0\");\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-assembly/all');\r\n    tableData.value = res.data.data.surveyAssemblys;\r\n}\r\ninitList();\r\nconst handlePublished = (row) => {\r\n    ElMessageBox.confirm(\r\n        '您确定要发布该问卷吗？发布后不可再编辑！',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    ).then(async () => {\r\n        row.published = \"发布\";\r\n        let res = await axios.post('/api/survey-assembly/edit', row);\r\n        if (res.data.success === true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '执行成功',\r\n            })\r\n            initList();\r\n        } else {\r\n            ElMessage({\r\n                type: 'error',\r\n                message: res.data.msg,\r\n            })\r\n        }\r\n    }).catch(() => {\r\n\r\n    })\r\n}\r\nconst handleSurveyDialog = async (id, password, surveyQuestionIds) => {\r\n    if (typeof password === 'undefined' || password == null || password === '') {\r\n        assemblyId.value = id;\r\n        dialogVisible.value = true;\r\n        questionIds.value= surveyQuestionIds;\r\n    }\r\n    else {\r\n        ElMessageBox.prompt('请输入问卷密码', '身份验证', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消'\r\n        })\r\n            .then(({ value }) => {\r\n                if (value === password) {\r\n                    ElMessage({\r\n                        type: 'success',\r\n                        message: '密码正确',\r\n                    });\r\n                    assemblyId.value = id;\r\n                    dialogVisible.value = true;\r\n                    questionIds.value= surveyQuestionIds;\r\n                } else {\r\n                    ElMessage({\r\n                        type: 'error',\r\n                        message: '密码错误',\r\n                    });\r\n                }\r\n            })\r\n            .catch(() => {})\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;;;;6DACIA,YAAA,CAqBUC,kBAAA;sBApBN,MAmBW,CAnBXD,YAAA,CAmBWE,mBAAA;MAnBAC,IAAI,EAAEC,MAAA,CAAAC,SAAS;MAAEC,MAAM,EAAN,EAAM;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBAC/B,MAAmD,CAAnDP,YAAA,CAAmDQ,0BAAA;QAAlCC,IAAI,EAAC,IAAI;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5CX,YAAA,CAAwDQ,0BAAA;QAAvCC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAChDX,YAAA,CAAoEQ,0BAAA;QAAnDC,IAAI,EAAC,kBAAkB;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAC5DX,YAAA,CAA6DQ,0BAAA;QAA5CC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UACrDX,YAAA,CAakBQ,0BAAA;QAbDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BACfE,KAAK,KACnBZ,YAAA,CAIYa,oBAAA;UAJDC,IAAI,EAAC,QAAQ;UACZC,QAAQ,EAAEH,KAAK,CAACI,GAAG,CAACC,SAAS;UAC7BC,OAAK,EAAAC,MAAA,IAAEf,MAAA,CAAAgB,eAAe,CAACR,KAAK,CAACI,GAAG;;4BAAG,MAE/C,C,iBAF+C,MAE/C,E;;sEACAhB,YAAA,CAIYa,oBAAA;UAJDC,IAAI,EAAC,SAAS;UAAEO,IAAI,EAAEjB,MAAA,CAAAkB,IAAI;UACzBP,QAAQ,EAAEH,KAAK,CAACI,GAAG,CAACC,SAAS;UAC7BC,OAAK,EAAAC,MAAA,IAAEf,MAAA,CAAAmB,kBAAkB,CAACX,KAAK,CAACI,GAAG,CAACQ,EAAE,EAAEZ,KAAK,CAACI,GAAG,CAACS,QAAQ,EAAEb,KAAK,CAACI,GAAG,CAACU,gBAAgB;;4BAAG,MAErG,C,iBAFqG,OAErG,E;;;;;;;;;MAKhB1B,YAAA,CAKgBI,MAAA;gBALOA,MAAA,CAAAuB,aAAa;+DAAbvB,MAAA,CAAAuB,aAAa,GAAAR,MAAA;IACrBK,EAAE,EAAEpB,MAAA,CAAAwB,UAAU;IACdD,aAAa,EAAEvB,MAAA,CAAAuB,aAAa;IAC5BE,iBAAiB,EAAEzB,MAAA,CAAA0B,WAAW;IAC9BC,UAAQ,EAAE3B,MAAA,CAAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}