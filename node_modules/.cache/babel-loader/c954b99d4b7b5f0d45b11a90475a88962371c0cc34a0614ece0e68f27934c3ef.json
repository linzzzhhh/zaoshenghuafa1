{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'editQuestion',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    id: {\n      type: Number,\n      default: -1,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'initList'],\n  setup(__props, {\n    expose: __expose,\n    emit: emits\n  }) {\n    __expose();\n    const props = __props;\n    const tableData = ref([]);\n    const initQuestionList = async () => {\n      const res = await axios.get('/api/survey-question/all');\n      tableData.value = res.data.data.surveyQuestions;\n    };\n    const cateFormatter = row => {\n      switch (row.surveyCateId) {\n        case 1:\n          return \"选择题\";\n        case 2:\n          return \"判断题\";\n        case 3:\n          return \"简答题\";\n        default:\n          return row.surveyCateId;\n      }\n    };\n    watch(() => props.dialogVisible, () => {\n      if (props.dialogVisible === true) {\n        initQuestionList();\n        initData(props.id);\n      }\n    });\n    const questionIds = ref(\"0\");\n    const handleSelectionChange = val => {\n      let idList = val.map(item => {\n        return item.id;\n      });\n      if (idList.length === 0) {\n        questionIds.value = \"0\";\n        return;\n      }\n      let itemIds = \"\";\n      idList.forEach((item, index) => {\n        itemIds += item;\n        if (index !== idList.length - 1) {\n          itemIds += \",\";\n        }\n      });\n      console.log(itemIds);\n      questionIds.value = itemIds;\n    };\n    const assembly = ref({});\n    const initData = async id => {\n      const res = await axios.get('/api/survey-assembly/one/' + id);\n      assembly.value = res.data.data.assembly;\n    };\n    const handleConfirm = async () => {\n      assembly.value.surveyQuestonIds = questionIds.value;\n      let res = await axios.post('/api/survey-assembly/edit', assembly.value);\n      if (res.data.success === true) {\n        ElMessage.success(\"执行成功！\");\n        emits('initList');\n        handleClose();\n      } else {\n        ElMessage.error(res.data.msg);\n      }\n    };\n    const handleClose = () => {\n      emits('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      tableData,\n      initQuestionList,\n      cateFormatter,\n      questionIds,\n      handleSelectionChange,\n      assembly,\n      initData,\n      handleConfirm,\n      emits,\n      handleClose,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","axios","ElMessage","tableData","initQuestionList","res","get","value","data","surveyQuestions","cateFormatter","row","surveyCateId","props","dialogVisible","initData","id","questionIds","handleSelectionChange","val","idList","map","item","length","itemIds","forEach","index","console","log","assembly","handleConfirm","surveyQuestonIds","post","success","emits","handleClose","error","msg"],"sources":["D:/vue_project/survey-vue/src/views/assembly/components/editQuestion.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n        model-value=\"dialogVisible\"\r\n        title=\"选项管理\"\r\n        width=\"50%\"\r\n        @close=\"handleClose\"\r\n        center\r\n    >\r\n        请选择要组卷的题目：\r\n        <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\" style=\"width: 100%\">\r\n            <!-- 复选框 -->\r\n            <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"content\" label=\"问题\" width=\"250\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" width=\"250\" />\r\n            <el-table-column prop=\"surveyCateId\" label=\"分类ID\" width=\"120\" :formatter=\"cateFormatter\"/>\r\n            <el-table-column prop=\"surveyItemIds\" label=\"选项ID\" width=\"120\" />\r\n        </el-table>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定组卷</el-button>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst props = defineProps(\r\n    {\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        }\r\n    }\r\n);\r\nconst tableData = ref([]);\r\nconst initQuestionList = async () => {\r\n    const res = await axios.get('/api/survey-question/all');\r\n    tableData.value = res.data.data.surveyQuestions;\r\n};\r\nconst cateFormatter = (row) => {\r\n    switch (row.surveyCateId) {\r\n        case 1:\r\n            return \"选择题\"\r\n        case 2:\r\n            return \"判断题\"\r\n        case 3:\r\n            return \"简答题\"\r\n        default:\r\n            return row.surveyCateId\r\n    }\r\n}\r\nwatch(\r\n    () => props.dialogVisible,\r\n    () => {\r\n        if (props.dialogVisible === true) {\r\n            initQuestionList();\r\n            initData(props.id);\r\n        }\r\n    },\r\n);\r\nconst questionIds = ref(\"0\");\r\nconst handleSelectionChange = (val) => {\r\n    let idList = val.map((item) =>{\r\n        return item.id;\r\n    });\r\n    if (idList.length === 0) {\r\n        questionIds.value = \"0\";\r\n        return;\r\n    }\r\n    let itemIds = \"\";\r\n    idList.forEach((item, index)=>{\r\n        itemIds += item;\r\n        if (index !== idList.length-1) {\r\n            itemIds += \",\";\r\n        }\r\n    })\r\n    console.log(itemIds);\r\n    questionIds.value = itemIds;\r\n}\r\nconst assembly = ref({});\r\nconst initData = async (id) => {\r\n    const res = await axios.get('/api/survey-assembly/one/' + id);\r\n    assembly.value = res.data.data.assembly;\r\n}\r\nconst handleConfirm = async () => {\r\n    assembly.value.surveyQuestonIds = questionIds.value;\r\n    let res = await axios.post('/api/survey-assembly/edit', assembly.value);\r\n    if (res.data.success === true) {\r\n        ElMessage.success(\"执行成功！\");\r\n        emits('initList');\r\n        handleClose();\r\n    } else {\r\n        ElMessage.error(res.data.msg);\r\n    }\r\n}\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\nconst handleClose = () => {\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}