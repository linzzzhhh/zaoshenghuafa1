{"ast":null,"code":"import { Delete, DocumentAdd, Edit } from \"@element-plus/icons-vue\";\nimport { ref } from \"vue\";\nimport axios from \"@/util/axios\";\nimport AddDialog from \"@/views/question/components/add\";\nimport EditDialog from \"@/views/question/components/edit\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const tableData = ref([]);\n    const dialogVisible = ref(false);\n    const initList = async () => {\n      const res = await axios.get('/api/survey-question/all');\n      tableData.value = res.data.data.surveyQuestions;\n    };\n    initList();\n    const handleAddDialog = () => {\n      dialogVisible.value = true;\n    };\n    const cateFormatter = row => {\n      switch (row.surveyCateId) {\n        case 1:\n          return \"选择题\";\n        case 2:\n          return \"判断题\";\n        case 3:\n          return \"简答题\";\n        default:\n          return row.surveyCateId;\n      }\n    };\n    const handleDelete = id => {\n      ElMessageBox.confirm('确定要删除吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let res = await axios.get('/api/survey-cate/delete/' + id);\n        if (res.data.success === true) {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          });\n          initList();\n        } else {\n          ElMessage({\n            type: 'error',\n            message: res.data.msg\n          });\n        }\n      }).catch(() => {});\n    };\n    const __returned__ = {\n      tableData,\n      dialogVisible,\n      initList,\n      handleAddDialog,\n      cateFormatter,\n      handleDelete,\n      get Delete() {\n        return Delete;\n      },\n      get DocumentAdd() {\n        return DocumentAdd;\n      },\n      get Edit() {\n        return Edit;\n      },\n      ref,\n      get axios() {\n        return axios;\n      },\n      get AddDialog() {\n        return AddDialog;\n      },\n      get EditDialog() {\n        return EditDialog;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Delete","DocumentAdd","Edit","ref","axios","AddDialog","EditDialog","ElMessage","ElMessageBox","tableData","dialogVisible","initList","res","get","value","data","surveyQuestions","handleAddDialog","cateFormatter","row","surveyCateId","handleDelete","id","confirm","confirmButtonText","cancelButtonText","type","then","success","message","msg","catch"],"sources":["D:/vue_project/survey-vue/src/views/question/index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-row :gutter=\"20\" class=\"top\">\r\n            <el-button type=\"primary\" :icon=\"DocumentAdd\" @click=\"handleAddDialog()\">添加题目类型</el-button>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\r\n            <el-table-column prop=\"content\" label=\"问题\" width=\"200\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" width=\"200\" />\r\n            <el-table-column prop=\"surveyCateId\" label=\"分类ID\" width=\"200\" :formatter=\"cateFormatter\"/>\r\n            <el-table-column prop=\"surveyItemIds\" label=\"选项ID\" width=\"200\" />\r\n            <el-table-column prop=\"action\" label=\"操作\" width=\"200\" fixed=\"right\">\r\n                <template v-slot=\"scope\">\r\n<!--                    <el-button type=\"primary\" :icon=\"Edit\" :disabled=\"scope.row.status == '7' ? false : true\"-->\r\n<!--                               @click=\"handleEditDialog(scope.row.id)\">-->\r\n<!--                    </el-button>-->\r\n                    <el-button type=\"danger\" :icon=\"Delete\"\r\n                               @click=\"handleDelete(scope.row.id)\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <AddDialog v-model=\"dialogVisible\"\r\n               :dialogVisible=\"dialogVisible\"\r\n               @initList=\"initList\"\r\n    ></AddDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {Delete, DocumentAdd, Edit} from \"@element-plus/icons-vue\";\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport AddDialog from \"@/views/question/components/add\";\r\nimport EditDialog from \"@/views/question/components/edit\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\n\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-question/all');\r\n    tableData.value = res.data.data.surveyQuestions;\r\n}\r\ninitList();\r\nconst handleAddDialog = () => {\r\n    dialogVisible.value = true;\r\n}\r\nconst cateFormatter = (row) => {\r\n    switch (row.surveyCateId) {\r\n        case 1:\r\n            return \"选择题\"\r\n        case 2:\r\n            return \"判断题\"\r\n        case 3:\r\n            return \"简答题\"\r\n        default:\r\n            return row.surveyCateId\r\n    }\r\n}\r\n\r\nconst handleDelete = (id) => {\r\n    ElMessageBox.confirm(\r\n        '确定要删除吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    ).then(async () => {\r\n        let res = await axios.get('/api/survey-cate/delete/' + id)\r\n        if (res.data.success === true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '删除成功',\r\n            })\r\n            initList();\r\n        } else {\r\n            ElMessage({\r\n                type: 'error',\r\n                message: res.data.msg,\r\n            })\r\n        }\r\n    }).catch(() => {\r\n\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.top {\r\n  padding-bottom: 30px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"],"mappings":"AA8BA,SAAQA,MAAM,EAAEC,WAAW,EAAEC,IAAI,QAAO,yBAAyB;AACjE,SAAQC,GAAG,QAAO,KAAK;AACvB,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,UAAU,MAAM,kCAAkC;AACzD,SAAQC,SAAS,EAAEC,YAAY,QAAO,cAAc;;;;;;;IAEpD,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,aAAa,GAAGP,GAAG,CAAC,KAAK,CAAC;IAEhC,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0BAA0B,CAAC;MACvDJ,SAAS,CAACK,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,eAAe;IACnD,CAAC;IACDL,QAAQ,CAAC,CAAC;IACV,MAAMM,eAAe,GAAGA,CAAA,KAAM;MAC1BP,aAAa,CAACI,KAAK,GAAG,IAAI;IAC9B,CAAC;IACD,MAAMI,aAAa,GAAIC,GAAG,IAAK;MAC3B,QAAQA,GAAG,CAACC,YAAY;QACpB,KAAK,CAAC;UACF,OAAO,KAAK;QAChB,KAAK,CAAC;UACF,OAAO,KAAK;QAChB,KAAK,CAAC;UACF,OAAO,KAAK;QAChB;UACI,OAAOD,GAAG,CAACC,YAAY;MAC/B;IACJ,CAAC;IAED,MAAMC,YAAY,GAAIC,EAAE,IAAK;MACzBd,YAAY,CAACe,OAAO,CAChB,SAAS,EACT,MAAM,EACN;QACIC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACV,CACJ,CAAC,CAACC,IAAI,CAAC,YAAY;QACf,IAAIf,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0BAA0B,GAAGS,EAAE,CAAC;QAC1D,IAAIV,GAAG,CAACG,IAAI,CAACa,OAAO,KAAK,IAAI,EAAE;UAC3BrB,SAAS,CAAC;YACNmB,IAAI,EAAE,SAAS;YACfG,OAAO,EAAE;UACb,CAAC,CAAC;UACFlB,QAAQ,CAAC,CAAC;QACd,CAAC,MAAM;UACHJ,SAAS,CAAC;YACNmB,IAAI,EAAE,OAAO;YACbG,OAAO,EAAEjB,GAAG,CAACG,IAAI,CAACe;UACtB,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAEf,CAAC,CAAC;IACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}