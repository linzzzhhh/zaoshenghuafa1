{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport { Delete, Edit } from '@element-plus/icons-vue';\nimport EditDialog from \"@/views/question/components/editItemName\";\nexport default {\n  __name: 'editItems',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    id: {\n      type: Number,\n      default: -1,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'initList'],\n  setup(__props, {\n    expose: __expose,\n    emit: emits\n  }) {\n    __expose();\n    const props = __props;\n    const formRef = ref(null);\n    const form = ref({\n      id: null,\n      item: \"\",\n      userId: 0\n    });\n    const rules = ref({\n      item: [{\n        required: true,\n        message: '请输入选项内容'\n      }]\n    });\n    const tableData = ref([]);\n    const initItemList = async () => {\n      const res = await axios.get('/api/survey-item/all');\n      tableData.value = res.data.data.surveyItems;\n    };\n    watch(() => props.dialogVisible, () => {\n      if (props.dialogVisible === true) {\n        initItemList();\n        initData(props.id);\n      }\n    });\n    const handleAddItem = async () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          let res = await axios.post('/api/survey-item/add', form.value);\n          if (res.data.success === true) {\n            ElMessage.success(\"执行成功！\");\n            formRef.value.resetFields();\n            initItemList();\n          } else {\n            ElMessage.error(res.data.msg);\n          }\n        }\n      });\n    };\n    const addItemIds = ref(\"0\");\n    const handleSelectionChange = val => {\n      let idList = val.map(item => {\n        return item.id;\n      });\n      if (idList.length === 0) {\n        addItemIds.value = \"0\";\n        return;\n      }\n      let itemIds = \"\";\n      idList.forEach((item, index) => {\n        itemIds += item;\n        if (index !== idList.length - 1) {\n          itemIds += \",\";\n        }\n      });\n      console.log(itemIds);\n      addItemIds.value = itemIds;\n    };\n    const question = ref({});\n    const initData = async id => {\n      const res = await axios.get('/api/survey-question/one/' + id);\n      question.value = res.data.data.surveyQuestion;\n    };\n    const handleChangeItems = async () => {\n      question.value.surveyItemIds = addItemIds.value;\n      let res = await axios.post('/api/survey-question/edit', question.value);\n      if (res.data.success === true) {\n        ElMessage.success(\"执行成功！\");\n        emits('initList');\n        handleClose();\n      } else {\n        ElMessage.error(res.data.msg);\n      }\n    };\n    const editItemId = ref(0);\n    const editItemDialogVisible = ref(false);\n    const handleEditDialog = id => {\n      editItemId.value = id;\n      editItemDialogVisible.value = true;\n    };\n    const handleDelete = id => {\n      ElMessageBox.confirm('您确定要删除这条记录吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let res = await axios.get('/api/survey-item/delete/' + id);\n        if (res.data.success === true) {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          });\n          initItemList();\n        } else {\n          ElMessage({\n            type: 'error',\n            message: res.data.msg\n          });\n        }\n      }).catch(() => {});\n    };\n    const handleClose = () => {\n      formRef.value.resetFields();\n      form.value = {\n        id: null,\n        item: \"\",\n        userId: 0\n      };\n      emits('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      formRef,\n      form,\n      rules,\n      tableData,\n      initItemList,\n      emits,\n      handleAddItem,\n      addItemIds,\n      handleSelectionChange,\n      question,\n      initData,\n      handleChangeItems,\n      editItemId,\n      editItemDialogVisible,\n      handleEditDialog,\n      handleDelete,\n      handleClose,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Edit() {\n        return Edit;\n      },\n      get EditDialog() {\n        return EditDialog;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","axios","ElMessage","ElMessageBox","Delete","Edit","EditDialog","formRef","form","id","item","userId","rules","required","message","tableData","initItemList","res","get","value","data","surveyItems","props","dialogVisible","initData","handleAddItem","validate","valid","post","success","resetFields","error","msg","addItemIds","handleSelectionChange","val","idList","map","length","itemIds","forEach","index","console","log","question","surveyQuestion","handleChangeItems","surveyItemIds","emits","handleClose","editItemId","editItemDialogVisible","handleEditDialog","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","catch"],"sources":["D:/vue_project/survey-vue/src/views/question/components/editItems.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n        model-value=\"dialogVisible\"\r\n        title=\"选项管理\"\r\n        width=\"50%\"\r\n        @close=\"handleClose\"\r\n        center\r\n    >\r\n        <el-form\r\n            ref=\"formRef\"\r\n            :model=\"form\"\r\n            :rules=\"rules\"\r\n            label-width=\"100px\"\r\n            style=\"text-align: center\"\r\n        >\r\n            <el-form-item label=\"选项内容\" prop=\"item\">\r\n                <el-input placeholder=\"格式如：A、学生\" v-model=\"form.item\" style=\"width: 100px\"/>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleAddItem\">添加</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        请选择要加入该题目的选项：\r\n        <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\" style=\"width: 100%\">\r\n            <!-- 复选框 -->\r\n            <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"50\" />\r\n            <el-table-column prop=\"item\" label=\"选项内容\" width=\"200\" />\r\n            <el-table-column prop=\"action\" label=\"操作\" width=\"100\" >\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               @click=\"handleEditDialog(scope.row.id)\"></el-button>\r\n                    <el-button type=\"danger\" :icon=\"Delete\" disabled\r\n                               @click=\"handleDelete(scope.row.id)\"></el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-button type=\"primary\" @click=\"handleChangeItems\">确定选项</el-button>\r\n    </el-dialog>\r\n    <EditDialog v-model=\"editItemDialogVisible\"\r\n                :id=\"editItemId\"\r\n                :editItemDialogVisible=\"editItemDialogVisible\"\r\n                @initList=\"initItemList\"\r\n    ></EditDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport {Delete, Edit} from '@element-plus/icons-vue'\r\nimport EditDialog from \"@/views/question/components/editItemName\";\r\n\r\nconst props = defineProps(\r\n    {\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        }\r\n    }\r\n);\r\nconst formRef = ref(null);\r\nconst form = ref({\r\n    id: null,\r\n    item: \"\",\r\n    userId: 0\r\n});\r\nconst rules = ref({\r\n    item: [\r\n        {\r\n            required: true,\r\n            message: '请输入选项内容'\r\n        }\r\n    ],\r\n});\r\nconst tableData = ref([]);\r\nconst initItemList = async () => {\r\n    const res = await axios.get('/api/survey-item/all');\r\n    tableData.value = res.data.data.surveyItems;\r\n};\r\nwatch(\r\n    () => props.dialogVisible,\r\n    () => {\r\n        if (props.dialogVisible === true) {\r\n            initItemList();\r\n            initData(props.id);\r\n        }\r\n    },\r\n);\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\nconst handleAddItem = async () => {\r\n    formRef.value.validate(async(valid)=>{\r\n        if(valid){\r\n            let res = await axios.post('/api/survey-item/add', form.value);\r\n            if (res.data.success === true) {\r\n                ElMessage.success(\"执行成功！\");\r\n                formRef.value.resetFields();\r\n                initItemList();\r\n            } else {\r\n                ElMessage.error(res.data.msg);\r\n            }\r\n        }\r\n    })\r\n}\r\nconst addItemIds = ref(\"0\");\r\nconst handleSelectionChange = (val) => {\r\n    let idList = val.map((item) =>{\r\n        return item.id;\r\n    });\r\n    if (idList.length === 0) {\r\n        addItemIds.value = \"0\";\r\n        return;\r\n    }\r\n    let itemIds = \"\";\r\n    idList.forEach((item, index)=>{\r\n        itemIds += item;\r\n        if (index !== idList.length-1) {\r\n            itemIds += \",\";\r\n        }\r\n    })\r\n    console.log(itemIds);\r\n    addItemIds.value = itemIds;\r\n}\r\nconst question = ref({});\r\nconst initData = async (id) => {\r\n    const res = await axios.get('/api/survey-question/one/' + id);\r\n    question.value = res.data.data.surveyQuestion;\r\n}\r\nconst handleChangeItems = async () => {\r\n    question.value.surveyItemIds = addItemIds.value;\r\n    let res = await axios.post('/api/survey-question/edit', question.value);\r\n    if (res.data.success === true) {\r\n        ElMessage.success(\"执行成功！\");\r\n        emits('initList');\r\n        handleClose();\r\n    } else {\r\n        ElMessage.error(res.data.msg);\r\n    }\r\n}\r\nconst editItemId = ref(0);\r\nconst editItemDialogVisible = ref(false);\r\nconst handleEditDialog = (id) => {\r\n    editItemId.value = id;\r\n    editItemDialogVisible.value = true;\r\n}\r\nconst handleDelete = (id) =>{\r\n    ElMessageBox.confirm(\r\n        '您确定要删除这条记录吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    )\r\n        .then(async() => {\r\n            let res=await axios.get('/api/survey-item/delete/'+id)\r\n            if(res.data.success === true){\r\n                ElMessage({\r\n                    type: 'success',\r\n                    message: '删除成功',\r\n                });\r\n                initItemList();\r\n            }else{\r\n                ElMessage({\r\n                    type: 'error',\r\n                    message: res.data.msg,\r\n                });\r\n            }\r\n        })\r\n        .catch(() => {\r\n        })\r\n}\r\nconst handleClose = () => {\r\n    formRef.value.resetFields();\r\n    form.value = {\r\n        id: null,\r\n        item: \"\",\r\n        userId: 0\r\n    };\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}