{"ast":null,"code":"import { Delete, DocumentAdd, Edit } from \"@element-plus/icons-vue\";\nimport { ref } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport AddDialog from \"@/views/assembly/components/add\";\nimport EditDialog from \"@/views/question/components/edit.vue\";\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const tableData = ref([]);\n    const dialogVisible = ref(false);\n    const dialogVisible2 = ref(false);\n    const assemblyId = ref(-1);\n    const initList = async () => {\n      const res = await axios.get('/api/survey-assembly/all');\n      // tableData.value = res.data.data.surveyQuestions;\n    };\n\n    initList();\n    const handleAddDialog = () => {\n      dialogVisible.value = true;\n    };\n    const handleEditDialog = id => {\n      assemblyId.value = id;\n      dialogVisible2.value = true;\n    };\n    const handleDelete = id => {\n      ElMessageBox.confirm('确定要删除吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let res = await axios.get('/api/survey-assembly/delete/' + id);\n        if (res.data.success === true) {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          });\n          initList();\n        } else {\n          ElMessage({\n            type: 'error',\n            message: res.data.msg\n          });\n        }\n      }).catch(() => {});\n    };\n    const __returned__ = {\n      tableData,\n      dialogVisible,\n      dialogVisible2,\n      assemblyId,\n      initList,\n      handleAddDialog,\n      handleEditDialog,\n      handleDelete,\n      get Delete() {\n        return Delete;\n      },\n      get DocumentAdd() {\n        return DocumentAdd;\n      },\n      get Edit() {\n        return Edit;\n      },\n      ref,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get AddDialog() {\n        return AddDialog;\n      },\n      EditDialog\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Delete","DocumentAdd","Edit","ref","axios","ElMessage","ElMessageBox","AddDialog","EditDialog","tableData","dialogVisible","dialogVisible2","assemblyId","initList","res","get","handleAddDialog","value","handleEditDialog","id","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","data","success","message","msg","catch"],"sources":["D:/vue_project/survey-vue/src/views/assembly/index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-row :gutter=\"20\" class=\"top\">\r\n            <el-button type=\"primary\" :icon=\"DocumentAdd\" @click=\"handleAddDialog\">组卷</el-button>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"name\" label=\"问卷名称\" width=\"250\" />\r\n            <el-table-column prop=\"surveyQuestionIds\" label=\"题目ID\" width=\"250\" />\r\n            <el-table-column prop=\"action\" label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handleEditDialog(scope.row.id)\">\r\n                    </el-button>\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handleEditQuestionDialog(scope.row.id)\">\r\n                        编辑试题\r\n                    </el-button>\r\n                    <el-button type=\"danger\" :icon=\"Delete\" disabled\r\n                               @click=\"handleDelete(scope.row.id)\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <AddDialog v-model=\"dialogVisible\"\r\n               :dialogVisible=\"dialogVisible\"\r\n               @initList=\"initList\"\r\n    ></AddDialog>\r\n    <EditDialog v-model=\"dialogVisible2\"\r\n                :id=\"assemblyId\"\r\n                :dialogVisible=\"dialogVisible2\"\r\n                @initList=\"initList\"\r\n    ></EditDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {Delete, DocumentAdd, Edit} from \"@element-plus/icons-vue\";\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport AddDialog from \"@/views/assembly/components/add\";\r\nimport EditDialog from \"@/views/question/components/edit.vue\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\nconst dialogVisible2 = ref(false);\r\nconst assemblyId = ref(-1);\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-assembly/all');\r\n    // tableData.value = res.data.data.surveyQuestions;\r\n}\r\ninitList();\r\nconst handleAddDialog = () => {\r\n    dialogVisible.value = true;\r\n}\r\nconst handleEditDialog = (id) => {\r\n    assemblyId.value = id;\r\n    dialogVisible2.value = true;\r\n}\r\nconst handleDelete = (id) => {\r\n    ElMessageBox.confirm(\r\n        '确定要删除吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    ).then(async () => {\r\n        let res = await axios.get('/api/survey-assembly/delete/' + id)\r\n        if (res.data.success === true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '删除成功',\r\n            })\r\n            initList();\r\n        } else {\r\n            ElMessage({\r\n                type: 'error',\r\n                message: res.data.msg,\r\n            })\r\n        }\r\n    }).catch(() => {\r\n\r\n    })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAuCA,SAAQA,MAAM,EAAEC,WAAW,EAAEC,IAAI,QAAO,yBAAyB;AACjE,SAAQC,GAAG,QAAO,KAAK;AACvB,OAAOC,KAAK,MAAM,cAAc;AAChC,SAAQC,SAAS,EAAEC,YAAY,QAAO,cAAc;AACpD,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,UAAU,MAAM,sCAAsC;;;;;;;IAE7D,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,aAAa,GAAGP,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMQ,cAAc,GAAGR,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMS,UAAU,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,0BAA0B,CAAC;MACvD;IACJ,CAAC;;IACDF,QAAQ,CAAC,CAAC;IACV,MAAMG,eAAe,GAAGA,CAAA,KAAM;MAC1BN,aAAa,CAACO,KAAK,GAAG,IAAI;IAC9B,CAAC;IACD,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;MAC7BP,UAAU,CAACK,KAAK,GAAGE,EAAE;MACrBR,cAAc,CAACM,KAAK,GAAG,IAAI;IAC/B,CAAC;IACD,MAAMG,YAAY,GAAID,EAAE,IAAK;MACzBb,YAAY,CAACe,OAAO,CAChB,SAAS,EACT,MAAM,EACN;QACIC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACV,CACJ,CAAC,CAACC,IAAI,CAAC,YAAY;QACf,IAAIX,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8BAA8B,GAAGI,EAAE,CAAC;QAC9D,IAAIL,GAAG,CAACY,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;UAC3BtB,SAAS,CAAC;YACNmB,IAAI,EAAE,SAAS;YACfI,OAAO,EAAE;UACb,CAAC,CAAC;UACFf,QAAQ,CAAC,CAAC;QACd,CAAC,MAAM;UACHR,SAAS,CAAC;YACNmB,IAAI,EAAE,OAAO;YACbI,OAAO,EAAEd,GAAG,CAACY,IAAI,CAACG;UACtB,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAEf,CAAC,CAAC;IACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}