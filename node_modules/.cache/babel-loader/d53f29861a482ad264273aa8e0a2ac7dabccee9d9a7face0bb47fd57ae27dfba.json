{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    \"model-value\": \"dialogVisible\",\n    title: $props.dialogTitle,\n    width: \"40%\",\n    onClose: $setup.handleClose\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_1, [_createVNode(_component_el_button, {\n      onClick: $setup.handleClose\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleConfirm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确认\")]),\n      _: 1 /* STABLE */\n    })])]),\n\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"formRef\",\n      model: $setup.form,\n      rules: $setup.rules,\n      \"label-width\": \"150px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"大类名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"大类描述\",\n        prop: \"remark\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.remark,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.remark = $event),\n          type: \"textarea\",\n          rows: 4\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_el_dialog","title","$props","dialogTitle","width","onClose","$setup","handleClose","footer","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_el_button","onClick","type","handleConfirm","_component_el_form","ref","model","form","rules","_component_el_form_item","label","prop","_component_el_input","name","$event","remark","rows"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\category\\components\\dialog.vue"],"sourcesContent":["<template>\r\n  <el-dialog\r\n    model-value=\"dialogVisible\"\r\n    :title=\"dialogTitle\"\r\n    width=\"40%\"\r\n    @close=\"handleClose\"\r\n  >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"150px\"\r\n      >\r\n          <el-form-item label=\"大类名称\" prop=\"name\">\r\n              <el-input v-model=\"form.name\"/>\r\n          </el-form-item>\r\n          <el-form-item label=\"大类描述\" prop=\"remark\">\r\n              <el-input v-model=\"form.remark\" type=\"textarea\" :rows=\"4\"/>\r\n          </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n          <span class=\"dialog-footer\">\r\n              <el-button @click=\"handleClose\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"handleConfirm\">确认</el-button>\r\n          </span>\r\n      </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst formRef = ref(null);\r\nconst props = defineProps(\r\n    {\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        },\r\n        dialogTitle: {\r\n            type: String,\r\n            default: '',\r\n            required: true\r\n        },\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        }\r\n    }\r\n)\r\nconst form = ref({\r\n    id:-1,\r\n    name:\"\",\r\n    remark:\"\"\r\n})\r\nconst rules = ref({\r\n    name: [\r\n        {\r\n            required: true,\r\n            message: '请输入商品大类名称！'\r\n        }\r\n    ],\r\n    remark: [\r\n        {\r\n            required: true,\r\n            message: '请输入商品大类描述！'\r\n        }\r\n    ]\r\n})\r\nwatch(\r\n    ()=>props.dialogVisible,\r\n    ()=>{\r\n        let id = props.id;\r\n        if (id !== -1 && props.dialogVisible === true) {\r\n            initFormData(id);\r\n        }\r\n        if (id === -1) {\r\n            form.value = {\r\n                id:-1,\r\n                name:\"\",\r\n                remark:\"\"\r\n            }\r\n        }\r\n    }\r\n)\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\nconst initFormData = async (id) => {\r\n    const res = await axios.get('good-serv/admin/bigType/detail/' + id);\r\n    form.value = res.data.result;\r\n}\r\nconst handleConfirm = () => {\r\n    formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n            let res = await axios.post('good-serv/admin/bigType/save', form.value);\r\n            if (res.data.code == 200) {\r\n                ElMessage.success(\"执行成功！\");\r\n                formRef.value.resetFields();\r\n                emits('initList');\r\n                handleClose();\r\n            } else {\r\n                ElMessage.error(res.data.msg);\r\n            }\r\n        } else {\r\n            console.log(\"fail\");\r\n        }\r\n    })\r\n}\r\nconst handleClose = () => {\r\n    formRef.value.resetFields();\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EAqBgBA,KAAK,EAAC;AAAe;;;;;;;uBApBnCC,YAAA,CAyBYC,oBAAA;IAxBV,aAAW,EAAC,eAAe;IAC1BC,KAAK,EAAEC,MAAA,CAAAC,WAAW;IACnBC,KAAK,EAAC,KAAK;IACVC,OAAK,EAAEC,MAAA,CAAAC;;IAeKC,MAAM,EAAAC,QAAA,CACb,MAGO,CAHPC,mBAAA,CAGO,QAHPC,UAGO,GAFHC,YAAA,CAA8CC,oBAAA;MAAlCC,OAAK,EAAER,MAAA,CAAAC;IAAW;wBAAE,MAAE,C,iBAAF,IAAE,E;;QAClCK,YAAA,CAA+DC,oBAAA;MAApDE,IAAI,EAAC,SAAS;MAAED,OAAK,EAAER,MAAA,CAAAU;;wBAAe,MAAE,C,iBAAF,IAAE,E;;;;sBAhB3D,MAYU,CAZVJ,YAAA,CAYUK,kBAAA;MAXRC,GAAG,EAAC,SAAS;MACZC,KAAK,EAAEb,MAAA,CAAAc,IAAI;MACXC,KAAK,EAAEf,MAAA,CAAAe,KAAK;MACb,aAAW,EAAC;;wBAEV,MAEe,CAFfT,YAAA,CAEeU,uBAAA;QAFDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;0BAC5B,MAA+B,CAA/BZ,YAAA,CAA+Ba,mBAAA;sBAAZnB,MAAA,CAAAc,IAAI,CAACM,IAAI;qEAATpB,MAAA,CAAAc,IAAI,CAACM,IAAI,GAAAC,MAAA;;;UAEhCf,YAAA,CAEeU,uBAAA;QAFDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;0BAC5B,MAA2D,CAA3DZ,YAAA,CAA2Da,mBAAA;sBAAxCnB,MAAA,CAAAc,IAAI,CAACQ,MAAM;qEAAXtB,MAAA,CAAAc,IAAI,CAACQ,MAAM,GAAAD,MAAA;UAAEZ,IAAI,EAAC,UAAU;UAAEc,IAAI,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}