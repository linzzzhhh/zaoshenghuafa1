{"ast":null,"code":"// 引入axios\nimport axios from 'axios';\nlet baseUrl = \"http://api.jqrjq.cn\";\n\n// 创建axios实例\nconst httpService = axios.create({\n  baseURL: baseUrl,\n  // 请求超时时间\n  timeout: 3000 // 需自定义\n});\n\n//添加请求和响应拦截器\n// 添加请求拦截器\nhttpService.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  // 在这里将浏览器中存储的token加入请求头部\n  config.headers.token = window.sessionStorage.getItem('token');\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\nhttpService.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\n\n/*\r\n *  get请求\r\n *  url:请求地址\r\n *  params:参数\r\n * */\nexport function get(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    httpService({\n      url: url,\n      method: 'get',\n      params: params\n    }).then(response => {\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}\n\n/*\r\n *  post请求\r\n *  url:请求地址\r\n *  params:参数\r\n * */\nexport function post(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    httpService({\n      url: url,\n      method: 'post',\n      data: params\n    }).then(response => {\n      console.log(response);\n      resolve(response);\n    }).catch(error => {\n      console.log(error);\n      reject(error);\n    });\n  });\n}\nexport default {\n  get,\n  post\n};\nexport function getServerUrl() {\n  return baseUrl;\n}","map":{"version":3,"names":["axios","baseUrl","httpService","create","baseURL","timeout","interceptors","request","use","config","headers","token","window","sessionStorage","getItem","error","Promise","reject","response","get","url","params","resolve","method","then","catch","post","data","console","log","getServerUrl"],"sources":["D:/vue_project/survey-vue/src/util/axios.js"],"sourcesContent":["// 引入axios\r\nimport axios from 'axios';\r\n\r\nlet baseUrl = \"http://api.jqrjq.cn\"\r\n\r\n// 创建axios实例\r\nconst httpService = axios.create({\r\n  baseURL: baseUrl,\r\n  // 请求超时时间\r\n  timeout: 3000 // 需自定义\r\n});\r\n\r\n//添加请求和响应拦截器\r\n// 添加请求拦截器\r\nhttpService.interceptors.request.use(function (config) {\r\n  // 在发送请求之前做些什么\r\n  // 在这里将浏览器中存储的token加入请求头部\r\n  config.headers.token=window.sessionStorage.getItem('token');\r\n  return config;\r\n}, function (error) {\r\n  // 对请求错误做些什么\r\n  return Promise.reject(error);\r\n});\r\n\r\n// 添加响应拦截器\r\nhttpService.interceptors.response.use(function (response) {\r\n  // 对响应数据做点什么\r\n  return response;\r\n}, function (error) {\r\n  // 对响应错误做点什么\r\n  return Promise.reject(error);\r\n});\r\n\r\n/*\r\n *  get请求\r\n *  url:请求地址\r\n *  params:参数\r\n * */\r\nexport function get(url, params = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    httpService({\r\n      url: url,\r\n      method: 'get',\r\n      params: params\r\n    }).then(response => {\r\n      resolve(response);\r\n    }).catch(error => {\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\n/*\r\n *  post请求\r\n *  url:请求地址\r\n *  params:参数\r\n * */\r\nexport function post(url, params = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    httpService({\r\n      url: url,\r\n      method: 'post',\r\n      data: params\r\n    }).then(response => {\r\n      console.log(response)\r\n      resolve(response);\r\n    }).catch(error => {\r\n      console.log(error)\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nexport default {\r\n  get,\r\n  post\r\n}\r\n\r\nexport function getServerUrl() {\r\n  return baseUrl;\r\n}"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,qBAAqB;;AAEnC;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,OAAO;EAChB;EACAI,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACA;AACAH,WAAW,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EACrD;EACA;EACAA,MAAM,CAACC,OAAO,CAACC,KAAK,GAACC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3D,OAAOL,MAAM;AACf,CAAC,EAAE,UAAUM,KAAK,EAAE;EAClB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAb,WAAW,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAAC,UAAUU,QAAQ,EAAE;EACxD;EACA,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUH,KAAK,EAAE;EAClB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,GAAGA,CAACC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;EACpC,OAAO,IAAIL,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCf,WAAW,CAAC;MACVkB,GAAG,EAAEA,GAAG;MACRG,MAAM,EAAE,KAAK;MACbF,MAAM,EAAEA;IACV,CAAC,CAAC,CAACG,IAAI,CAACN,QAAQ,IAAI;MAClBI,OAAO,CAACJ,QAAQ,CAAC;IACnB,CAAC,CAAC,CAACO,KAAK,CAACV,KAAK,IAAI;MAChBE,MAAM,CAACF,KAAK,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,IAAIA,CAACN,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;EACrC,OAAO,IAAIL,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCf,WAAW,CAAC;MACVkB,GAAG,EAAEA,GAAG;MACRG,MAAM,EAAE,MAAM;MACdI,IAAI,EAAEN;IACR,CAAC,CAAC,CAACG,IAAI,CAACN,QAAQ,IAAI;MAClBU,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;MACrBI,OAAO,CAACJ,QAAQ,CAAC;IACnB,CAAC,CAAC,CAACO,KAAK,CAACV,KAAK,IAAI;MAChBa,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;MAClBE,MAAM,CAACF,KAAK,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,eAAe;EACbI,GAAG;EACHO;AACF,CAAC;AAED,OAAO,SAASI,YAAYA,CAAA,EAAG;EAC7B,OAAO7B,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}