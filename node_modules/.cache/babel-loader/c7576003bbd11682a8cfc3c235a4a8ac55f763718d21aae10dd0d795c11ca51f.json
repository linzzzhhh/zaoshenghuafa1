{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-63092d00\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 1\n};\nconst _hoisted_2 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    \"model-value\": \"dialogVisible\",\n    title: \"答题\",\n    width: \"40%\",\n    onClose: $setup.handleClose\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.questionList, (question, index) => {\n      return _openBlock(), _createBlock(_component_el_row, {\n        style: {\n          \"margin-bottom\": \"50px\"\n        },\n        key: question.id\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 24\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\"                题目内容\"), _createVNode(_component_el_row, {\n            class: \"question\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 1\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1) + \"、\", 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 23\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(question.content), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createCommentVNode(\"            如果有描述则显示描述\"), question.description != '' ? (_openBlock(), _createBlock(_component_el_row, {\n            key: 0,\n            class: \"description\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" 注：\"), _createElementVNode(\"span\", null, _toDisplayString(question.description), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                题目选项或答题区\"), _createVNode(_component_el_row, {\n            class: \"result\"\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\"如果是选择题\"), question.surveyCateId === 1 ? (_openBlock(), _createBlock(_component_el_col, {\n              key: 0,\n              span: 24\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_row, null, {\n                default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                  onChange: $setup.handleChangeOption,\n                  modelValue: _ctx.ooo,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.ooo = $event)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_radio_group, null, {\n                    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.itemList, (option, index) => {\n                      return _openBlock(), _createBlock(_component_el_col, {\n                        class: \"item\",\n                        span: \"4\",\n                        key: index\n                      }, {\n                        default: _withCtx(() => [_createVNode(_component_el_radio, {\n                          label: option.id\n                        }, {\n                          default: _withCtx(() => [_createTextVNode(_toDisplayString(option.item), 1 /* TEXT */)]),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"])]),\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */);\n                    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\"                                    <el-radio v-for=\\\"(option,i) in question.itemList\\\" :key=\\\"i\\\" :label=\\\"option.id\\\">{{option.name}}</el-radio>\")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"如果是判断题\"), question.surveyCateId === 2 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createVNode(_component_el_form_item, null, {\n              default: _withCtx(() => [_createVNode(_component_el_radio_group, null, {\n                default: _withCtx(() => [_createVNode(_component_el_radio, {\n                  label: \"是\"\n                }), _createVNode(_component_el_radio, {\n                  label: \"否\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"如果是简答题或其他\"), question.surveyCateId !== 1 && question.surveyCateId !== 2 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, [_createVNode(_component_el_form_item, null, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                type: \"textarea\",\n                style: {\n                  \"width\": \"500px\"\n                }\n              })]),\n              _: 1 /* STABLE */\n            })])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_dialog","title","width","onClose","$setup","handleClose","_createElementBlock","_Fragment","_renderList","questionList","question","index","_component_el_row","style","key","id","_createVNode","_component_el_col","span","_createCommentVNode","class","content","description","_createElementVNode","_toDisplayString","surveyCateId","_component_el_form_item","onChange","handleChangeOption","_ctx","ooo","$event","_component_el_radio_group","itemList","option","_component_el_radio","label","item","_hoisted_1","_hoisted_2","_component_el_input","type"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\survey\\components\\surveyDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n            model-value=\"dialogVisible\"\r\n            title=\"答题\"\r\n            width=\"40%\"\r\n            @close=\"handleClose\"\r\n    >\r\n        <el-row style=\"margin-bottom: 50px\"\r\n            v-for=\"(question,index) in questionList\"\r\n            :key=\"question.id\"\r\n        >\r\n            <el-col :span=\"24\">\r\n<!--                题目内容-->\r\n                <el-row class=\"question\">\r\n                    <el-col :span=\"1\">{{index+1}}、</el-col>\r\n                    <el-col :span=\"23\">{{question.content}}</el-col>\r\n                </el-row>\r\n<!--            如果有描述则显示描述-->\r\n                <el-row v-if=\"question.description!=''\" class=\"description\">\r\n                    注：<span>{{question.description}}</span>\r\n                </el-row>\r\n<!--                题目选项或答题区-->\r\n                <el-row class=\"result\">\r\n                    <!--如果是选择题-->\r\n                    <el-col :span=\"24\" v-if=\"question.surveyCateId===1\">\r\n                        <el-row>\r\n                            <el-form-item @change=\"handleChangeOption\" v-model=\"ooo\">\r\n                                <el-radio-group>\r\n                                    <el-col class=\"item\" span=\"4\"\r\n                                            v-for=\"(option,index) in question.itemList\"\r\n                                            :key=\"index\"\r\n                                    >\r\n                                        <el-radio :label=\"option.id\">{{option.item}}</el-radio>\r\n                                    </el-col>\r\n<!--                                    <el-radio v-for=\"(option,i) in question.itemList\" :key=\"i\" :label=\"option.id\">{{option.name}}</el-radio>-->\r\n                                </el-radio-group>\r\n                            </el-form-item>\r\n                        </el-row>\r\n                    </el-col>\r\n                    <!--如果是判断题-->\r\n                    <span v-if=\"question.surveyCateId===2\">\r\n                        <el-form-item>\r\n                            <el-radio-group>\r\n                                <el-radio label=\"是\" />\r\n                                <el-radio label=\"否\" />\r\n                            </el-radio-group>\r\n                        </el-form-item>\r\n                    </span>\r\n                    <!--如果是简答题或其他-->\r\n                    <span v-if=\"question.surveyCateId!==1 && question.surveyCateId!==2\">\r\n                      <el-form-item>\r\n                        <el-input type=\"textarea\" style=\"width: 500px\"/>\r\n                      </el-form-item>\r\n                    </span>\r\n                </el-row>\r\n            </el-col>\r\n        </el-row>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\n\r\nconst props = defineProps(\r\n    {\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        },\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        surveyQuestionIds: {\r\n            type: String,\r\n            default: \"0\",\r\n            required: true\r\n        }\r\n    }\r\n)\r\nwatch(\r\n    ()=>props.dialogVisible,\r\n    ()=>{\r\n        let id = props.id;\r\n        if (id !== -1 && props.dialogVisible === true) {\r\n            initData(props.surveyQuestionIds);\r\n        }\r\n    }\r\n)\r\nconst handleChangeOption = (val) => {\r\n    console.log(val.srcElement.value)\r\n}\r\nconst questionList = ref([]);\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\nconst initData = async (surveyQuestionIds) => {\r\n    // 根据题目id串获取问卷题目集合\r\n    let res = await axios.get('/api/survey-question/getSurveyQuestions/' + surveyQuestionIds);\r\n    let list = res.data.data.surveyQuestions\r\n    // 遍历题目集合\r\n    for (var i=0; i<list.length; i++) {\r\n        // 如果是选择题，加载选项\r\n        if (list[i].surveyCateId === 1) {\r\n            let res2 = await axios.get('/api/survey-item/getSurveyItems/' + list[i].surveyItemIds);\r\n            list[i].itemList = res2.data.data.surveyItems;\r\n        }\r\n    }\r\n    questionList.value = list;\r\n}\r\nconst handleClose = () => {\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.question {\r\n  margin-bottom: 15px;\r\n  font-size: large;\r\n}\r\n.description {\r\n  margin: 15px;\r\n}\r\n.result {\r\n  margin-bottom: 15px;\r\n}\r\n.item {\r\n  margin-left: 15px;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;uBACIA,YAAA,CAwDYC,oBAAA;IAvDJ,aAAW,EAAC,eAAe;IAC3BC,KAAK,EAAC,IAAI;IACVC,KAAK,EAAC,KAAK;IACVC,OAAK,EAAEC,MAAA,CAAAC;;sBAGR,MAAwC,E,kBAD5CC,mBAAA,CAiDSC,SAAA,QAAAC,WAAA,CAhDsBJ,MAAA,CAAAK,YAAY,GAA/BC,QAAQ,EAACC,KAAK;2BAD1BZ,YAAA,CAiDSa,iBAAA;QAjDDC,KAA2B,EAA3B;UAAA;QAAA,CAA2B;QAE9BC,GAAG,EAAEJ,QAAQ,CAACK;;0BAEf,MA4CS,CA5CTC,YAAA,CA4CSC,iBAAA;UA5CAC,IAAI,EAAE;QAAE;4BAC7B,MAA2B,CAA3BC,mBAAA,wBAA2B,EACXH,YAAA,CAGSJ,iBAAA;YAHDQ,KAAK,EAAC;UAAU;8BACpB,MAAuC,CAAvCJ,YAAA,CAAuCC,iBAAA;cAA9BC,IAAI,EAAE;YAAC;gCAAE,MAAW,C,kCAATP,KAAK,QAAI,GAAC,gB;;;0CAC9BK,YAAA,CAAgDC,iBAAA;cAAvCC,IAAI,EAAE;YAAE;gCAAE,MAAoB,C,kCAAlBR,QAAQ,CAACW,OAAO,iB;;;;;;wCAEzDF,mBAAA,0BAA6B,EACCT,QAAQ,CAACY,WAAW,U,cAAlCvB,YAAA,CAESa,iBAAA;;YAF+BQ,KAAK,EAAC;;8BAAc,MACtD,C,iBADsD,KACtD,GAAAG,mBAAA,CAAqC,cAAAC,gBAAA,CAA7Bd,QAAQ,CAACY,WAAW,iB;;;6EAElDH,mBAAA,4BAA+B,EACfH,YAAA,CAgCSJ,iBAAA;YAhCDQ,KAAK,EAAC;UAAQ;8BAClB,MAAa,CAAbD,mBAAA,UAAa,EACYT,QAAQ,CAACe,YAAY,U,cAA9C1B,YAAA,CAcSkB,iBAAA;;cAdAC,IAAI,EAAE;;gCACX,MAYS,CAZTF,YAAA,CAYSJ,iBAAA;kCAXL,MAUe,CAVfI,YAAA,CAUeU,uBAAA;kBAVAC,QAAM,EAAEvB,MAAA,CAAAwB,kBAAkB;8BAAWC,IAAA,CAAAC,GAAG;6EAAHD,IAAA,CAAAC,GAAG,GAAAC,MAAA;;oCACnD,MAQiB,CARjBf,YAAA,CAQiBgB,yBAAA;sCANL,MAA2C,E,kBADnD1B,mBAAA,CAKSC,SAAA,QAAAC,WAAA,CAJwBE,QAAQ,CAACuB,QAAQ,GAAlCC,MAAM,EAACvB,KAAK;2CAD5BZ,YAAA,CAKSkB,iBAAA;wBALDG,KAAK,EAAC,MAAM;wBAACF,IAAI,EAAC,GAAG;wBAEpBJ,GAAG,EAAEH;;0CAEV,MAAuD,CAAvDK,YAAA,CAAuDmB,mBAAA;0BAA5CC,KAAK,EAAEF,MAAM,CAACnB;;4CAAI,MAAe,C,kCAAbmB,MAAM,CAACG,IAAI,iB;;;;;;oDAElFlB,mBAAA,sJAAmJ,C;;;;;;;;;;+EAK/HA,mBAAA,UAAa,EACDT,QAAQ,CAACe,YAAY,U,cAAjCnB,mBAAA,CAOO,QAAAgC,UAAA,GANHtB,YAAA,CAKeU,uBAAA;gCAJX,MAGiB,CAHjBV,YAAA,CAGiBgB,yBAAA;kCAFb,MAAsB,CAAtBhB,YAAA,CAAsBmB,mBAAA;kBAAZC,KAAK,EAAC;gBAAG,IACnBpB,YAAA,CAAsBmB,mBAAA;kBAAZC,KAAK,EAAC;gBAAG,G;;;;;uDAI/BjB,mBAAA,aAAgB,EACJT,QAAQ,CAACe,YAAY,UAAQf,QAAQ,CAACe,YAAY,U,cAA9DnB,mBAAA,CAIO,QAAAiC,UAAA,GAHLvB,YAAA,CAEeU,uBAAA;gCADb,MAAgD,CAAhDV,YAAA,CAAgDwB,mBAAA;gBAAtCC,IAAI,EAAC,UAAU;gBAAC5B,KAAoB,EAApB;kBAAA;gBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}