{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20,\n      class: \"top\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        icon: $setup.DocumentAdd,\n        onClick: $setup.handleAddDialog\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"组卷\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table, {\n      data: $setup.tableData,\n      stripe: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"问卷名称\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyQuestionIds\",\n        label: \"题目ID\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"action\",\n        label: \"操作\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          icon: $setup.Edit,\n          disabled: scope.row.published === '未发布' ? false : true,\n          onClick: $event => $setup.handleEditDialog(scope.row.id)\n        }, null, 8 /* PROPS */, [\"icon\", \"disabled\", \"onClick\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          icon: $setup.Edit,\n          disabled: scope.row.published === '未发布' ? false : true,\n          onClick: $event => $setup.handleEditQuestionDialog(scope.row.id)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 编辑试题 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"icon\", \"disabled\", \"onClick\"]), _createVNode(_component_el_button, {\n          type: \"danger\",\n          icon: $setup.Delete,\n          disabled: \"\",\n          onClick: $event => $setup.handleDelete(scope.row.id)\n        }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"AddDialog\"], {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.dialogVisible = $event),\n    dialogVisible: $setup.dialogVisible,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"dialogVisible\"]), _createVNode($setup[\"EditDialog\"], {\n    modelValue: $setup.dialogVisible2,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible2 = $event),\n    id: $setup.assemblyId,\n    dialogVisible: $setup.dialogVisible2,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"dialogVisible\"]), _createVNode($setup[\"EditQuestionDialog\"], {\n    modelValue: $setup.dialogVisible3,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogVisible3 = $event),\n    id: $setup.assemblyId,\n    dialogVisible: $setup.dialogVisible3,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"dialogVisible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_el_card","_component_el_row","gutter","class","_component_el_button","type","icon","$setup","DocumentAdd","onClick","handleAddDialog","_component_el_table","data","tableData","stripe","style","_component_el_table_column","prop","label","width","scope","Edit","disabled","row","published","$event","handleEditDialog","id","handleEditQuestionDialog","Delete","handleDelete","dialogVisible","onInitList","initList","dialogVisible2","assemblyId","dialogVisible3"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\assembly\\index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-row :gutter=\"20\" class=\"top\">\r\n            <el-button type=\"primary\" :icon=\"DocumentAdd\" @click=\"handleAddDialog\">组卷</el-button>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"name\" label=\"问卷名称\" width=\"250\" />\r\n            <el-table-column prop=\"surveyQuestionIds\" label=\"题目ID\" width=\"250\" />\r\n            <el-table-column prop=\"action\" label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handleEditDialog(scope.row.id)\">\r\n                    </el-button>\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.published === '未发布' ? false : true\"\r\n                               @click=\"handleEditQuestionDialog(scope.row.id)\">\r\n                        编辑试题\r\n                    </el-button>\r\n                    <el-button type=\"danger\" :icon=\"Delete\" disabled\r\n                               @click=\"handleDelete(scope.row.id)\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <AddDialog v-model=\"dialogVisible\"\r\n               :dialogVisible=\"dialogVisible\"\r\n               @initList=\"initList\"\r\n    ></AddDialog>\r\n    <EditDialog v-model=\"dialogVisible2\"\r\n                :id=\"assemblyId\"\r\n                :dialogVisible=\"dialogVisible2\"\r\n                @initList=\"initList\"\r\n    ></EditDialog>\r\n    <EditQuestionDialog v-model=\"dialogVisible3\"\r\n                     :id=\"assemblyId\"\r\n                     :dialogVisible=\"dialogVisible3\"\r\n                     @initList=\"initList\"\r\n    ></EditQuestionDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {Delete, DocumentAdd, Edit} from \"@element-plus/icons-vue\";\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport AddDialog from \"@/views/assembly/components/add\";\r\nimport EditDialog from \"@/views/assembly/components/edit.vue\";\r\nimport EditQuestionDialog from \"@/views/assembly/components/editQuestion\";\r\n\r\nconst tableData = ref([]);\r\nconst dialogVisible = ref(false);\r\nconst dialogVisible2 = ref(false);\r\nconst dialogVisible3 = ref(false);\r\nconst assemblyId = ref(-1);\r\nconst initList = async () => {\r\n    const res = await axios.get('/api/survey-assembly/all');\r\n    // tableData.value = res.data.data.surveyQuestions;\r\n}\r\ninitList();\r\nconst handleAddDialog = () => {\r\n    dialogVisible.value = true;\r\n}\r\nconst handleEditDialog = (id) => {\r\n    assemblyId.value = id;\r\n    dialogVisible2.value = true;\r\n}\r\nconst handleEditQuestionDialog = (id) => {\r\n    assemblyId.value = id;\r\n    dialogVisible3.value = true;\r\n}\r\nconst handleDelete = (id) => {\r\n    ElMessageBox.confirm(\r\n        '确定要删除吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    ).then(async () => {\r\n        let res = await axios.get('/api/survey-assembly/delete/' + id)\r\n        if (res.data.success === true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '删除成功',\r\n            })\r\n            initList();\r\n        } else {\r\n            ElMessage({\r\n                type: 'error',\r\n                message: res.data.msg,\r\n            })\r\n        }\r\n    }).catch(() => {\r\n\r\n    })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.top {\r\n    padding-bottom: 30px;\r\n    box-sizing: border-box;\r\n}\r\n</style>"],"mappings":";;;;;;;6DACIA,YAAA,CAyBUC,kBAAA;sBAxBN,MAES,CAFTD,YAAA,CAESE,iBAAA;MAFAC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAC;;wBACvB,MAAqF,CAArFJ,YAAA,CAAqFK,oBAAA;QAA1EC,IAAI,EAAC,SAAS;QAAEC,IAAI,EAAEC,MAAA,CAAAC,WAAW;QAAGC,OAAK,EAAEF,MAAA,CAAAG;;0BAAiB,MAAE,C,iBAAF,IAAE,E;;;;QAE7EX,YAAA,CAoBWY,mBAAA;MApBAC,IAAI,EAAEL,MAAA,CAAAM,SAAS;MAAEC,MAAM,EAAN,EAAM;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBAC/B,MAAmD,CAAnDhB,YAAA,CAAmDiB,0BAAA;QAAlCC,IAAI,EAAC,IAAI;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5CpB,YAAA,CAAwDiB,0BAAA;QAAvCC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAChDpB,YAAA,CAAqEiB,0BAAA;QAApDC,IAAI,EAAC,mBAAmB;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAC7DpB,YAAA,CAekBiB,0BAAA;QAfDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BACfE,KAAK,KACnBrB,YAAA,CAGYK,oBAAA;UAHDC,IAAI,EAAC,SAAS;UAAEC,IAAI,EAAEC,MAAA,CAAAc,IAAI;UACzBC,QAAQ,EAAEF,KAAK,CAACG,GAAG,CAACC,SAAS;UAC7Bf,OAAK,EAAAgB,MAAA,IAAElB,MAAA,CAAAmB,gBAAgB,CAACN,KAAK,CAACG,GAAG,CAACI,EAAE;kEAEhD5B,YAAA,CAIYK,oBAAA;UAJDC,IAAI,EAAC,SAAS;UAAEC,IAAI,EAAEC,MAAA,CAAAc,IAAI;UACzBC,QAAQ,EAAEF,KAAK,CAACG,GAAG,CAACC,SAAS;UAC7Bf,OAAK,EAAAgB,MAAA,IAAElB,MAAA,CAAAqB,wBAAwB,CAACR,KAAK,CAACG,GAAG,CAACI,EAAE;;4BAAG,MAE3D,C,iBAF2D,QAE3D,E;;8EACA5B,YAAA,CAEYK,oBAAA;UAFDC,IAAI,EAAC,QAAQ;UAAEC,IAAI,EAAEC,MAAA,CAAAsB,MAAM;UAAEP,QAAQ,EAAR,EAAQ;UACpCb,OAAK,EAAAgB,MAAA,IAAElB,MAAA,CAAAuB,YAAY,CAACV,KAAK,CAACG,GAAG,CAACI,EAAE;;;;;;;;MAM5D5B,YAAA,CAGaQ,MAAA;gBAHOA,MAAA,CAAAwB,aAAa;+DAAbxB,MAAA,CAAAwB,aAAa,GAAAN,MAAA;IACrBM,aAAa,EAAExB,MAAA,CAAAwB,aAAa;IAC5BC,UAAQ,EAAEzB,MAAA,CAAA0B;4DAEtBlC,YAAA,CAIcQ,MAAA;gBAJOA,MAAA,CAAA2B,cAAc;+DAAd3B,MAAA,CAAA2B,cAAc,GAAAT,MAAA;IACtBE,EAAE,EAAEpB,MAAA,CAAA4B,UAAU;IACdJ,aAAa,EAAExB,MAAA,CAAA2B,cAAc;IAC7BF,UAAQ,EAAEzB,MAAA,CAAA0B;kEAEvBlC,YAAA,CAIsBQ,MAAA;gBAJOA,MAAA,CAAA6B,cAAc;+DAAd7B,MAAA,CAAA6B,cAAc,GAAAX,MAAA;IACzBE,EAAE,EAAEpB,MAAA,CAAA4B,UAAU;IACdJ,aAAa,EAAExB,MAAA,CAAA6B,cAAc;IAC7BJ,UAAQ,EAAEzB,MAAA,CAAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}