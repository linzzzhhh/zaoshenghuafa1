{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport axios from \"@/util/axios\";\nexport default {\n  __name: 'surveyDialog',\n  props: {\n    id: {\n      type: Number,\n      default: -1,\n      required: true\n    },\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    surveyQuestionIds: {\n      type: String,\n      default: \"0\",\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'initList'],\n  setup(__props, {\n    expose: __expose,\n    emit: emits\n  }) {\n    __expose();\n    const props = __props;\n    watch(() => props.dialogVisible, () => {\n      let id = props.id;\n      if (id !== -1 && props.dialogVisible === true) {\n        initData(props.surveyQuestionIds);\n      }\n    });\n    const questionList = ref([]);\n    const initData = async surveyQuestionIds => {\n      // 根据题目id串获取问卷题目集合\n      let res = await axios.get('/api/survey-question/getSurveyQuestions/' + surveyQuestionIds);\n      let list = res.data.data.surveyQuestions;\n      // let questionIdList = surveyQuestionIds.split(',');\n      // let list = await Promise.all(\n      //     questionIdList.map(\n      //         async (item) => {\n      //             let res = await axios.get('/api/survey-question/one/' + item);\n      //             let question = res.data.data.surveyQuestion;\n      //             console.log(question)\n      //             return question;\n      //         }\n      //     )\n      // )\n      // 遍历题目集合\n      for (var i = 0; i < list.length; i++) {\n        // 如果是选择题，加载选项\n        if (list[i].surveyCateId === 1) {\n          let res2 = await axios.get('/api/survey-item/getSurveyItems/' + list[i].surveyItemIds);\n          list[i].itemList = res2.data.data.surveyItems;\n        }\n      }\n      // 遍历题目集合，如果是选择题，加载选项\n      // list.forEach(\n      //     (item, index) => {\n      //         // 如果是选择题，加载选项\n      //         if (item.surveyCateId === 1) {\n      //             let itemIdList = question.surveyItemIds.split(',');\n      //             let res2 = await axios.get('/api/survey-question/getSurveyQuestions/' + surveyQuestionIds);\n      //         }\n      //     }\n      // )\n      questionList.value = list;\n    };\n    const handleClose = () => {\n      emits('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      questionList,\n      emits,\n      initData,\n      handleClose,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","axios","props","dialogVisible","id","initData","surveyQuestionIds","questionList","res","get","list","data","surveyQuestions","i","length","surveyCateId","res2","surveyItemIds","itemList","surveyItems","value","handleClose","emits"],"sources":["D:/vue_project/survey-vue/src/views/survey/components/surveyDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n            model-value=\"dialogVisible\"\r\n            title=\"答题\"\r\n            width=\"40%\"\r\n            @close=\"handleClose\"\r\n    >\r\n        <el-row style=\"margin-bottom: 50px\"\r\n            v-for=\"(question,index) in questionList\"\r\n            :key=\"question.id\"\r\n        >\r\n            <el-col :span=\"24\">\r\n<!--                题目内容-->\r\n                <el-row class=\"question\">\r\n                    <el-col :span=\"1\">{{index+1}}、</el-col>\r\n                    <el-col :span=\"23\">{{question.content}}</el-col>\r\n                </el-row>\r\n<!--            如果有描述则显示描述-->\r\n                <el-row v-if=\"question.description!=''\" class=\"description\">\r\n                    注：<span>{{question.description}}</span>\r\n                </el-row>\r\n<!--                题目选项或答题区-->\r\n                <el-row class=\"result\">\r\n                    <!--如果是选择题-->\r\n                    <span v-if=\"question.surveyCateId===1\">\r\n选择题\r\n                        <el-col class=\"item\" :span=\"4\"\r\n                          v-for=\"(option,index) in question.itemList\"\r\n                          :key=\"index\"\r\n                        >\r\n                            {{option.item}}\r\n                        </el-col>\r\n                    </span>\r\n                    <!--如果是判断题-->\r\n                    <span v-if=\"question.surveyCateId===2\">\r\n判断题\r\n                    </span>\r\n                    <!--如果是简答题或其他-->\r\n                    <span v-if=\"question.surveyCateId!==1 && question.surveyCateId!==2\">\r\n简答题或其他\r\n                    </span>\r\n                </el-row>\r\n            </el-col>\r\n        </el-row>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\n\r\nconst props = defineProps(\r\n    {\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        },\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        surveyQuestionIds: {\r\n            type: String,\r\n            default: \"0\",\r\n            required: true\r\n        }\r\n    }\r\n)\r\nwatch(\r\n    ()=>props.dialogVisible,\r\n    ()=>{\r\n        let id = props.id;\r\n        if (id !== -1 && props.dialogVisible === true) {\r\n            initData(props.surveyQuestionIds);\r\n        }\r\n    }\r\n)\r\nconst questionList = ref([]);\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\nconst initData = async (surveyQuestionIds) => {\r\n    // 根据题目id串获取问卷题目集合\r\n    let res = await axios.get('/api/survey-question/getSurveyQuestions/' + surveyQuestionIds);\r\n    let list = res.data.data.surveyQuestions\r\n    // let questionIdList = surveyQuestionIds.split(',');\r\n    // let list = await Promise.all(\r\n    //     questionIdList.map(\r\n    //         async (item) => {\r\n    //             let res = await axios.get('/api/survey-question/one/' + item);\r\n    //             let question = res.data.data.surveyQuestion;\r\n    //             console.log(question)\r\n    //             return question;\r\n    //         }\r\n    //     )\r\n    // )\r\n    // 遍历题目集合\r\n    for (var i=0; i<list.length; i++) {\r\n        // 如果是选择题，加载选项\r\n        if (list[i].surveyCateId === 1) {\r\n            let res2 = await axios.get('/api/survey-item/getSurveyItems/' + list[i].surveyItemIds);\r\n            list[i].itemList = res2.data.data.surveyItems;\r\n        }\r\n    }\r\n    // 遍历题目集合，如果是选择题，加载选项\r\n    // list.forEach(\r\n    //     (item, index) => {\r\n    //         // 如果是选择题，加载选项\r\n    //         if (item.surveyCateId === 1) {\r\n    //             let itemIdList = question.surveyItemIds.split(',');\r\n    //             let res2 = await axios.get('/api/survey-question/getSurveyQuestions/' + surveyQuestionIds);\r\n    //         }\r\n    //     }\r\n    // )\r\n    questionList.value = list;\r\n}\r\nconst handleClose = () => {\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.question {\r\n  margin-bottom: 15px;\r\n  font-size: large;\r\n}\r\n.description {\r\n  margin: 15px;\r\n}\r\n.result {\r\n  margin-bottom: 15px;\r\n}\r\n.item {\r\n  margin: 15px;\r\n}\r\n</style>"],"mappings":"AAgDA,SAAkCA,GAAG,EAAEC,KAAK,QAAO,KAAK;AACxD,OAAOC,KAAK,MAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqBhCD,KAAK,CACD,MAAIE,KAAK,CAACC,aAAa,EACvB,MAAI;MACA,IAAIC,EAAE,GAAGF,KAAK,CAACE,EAAE;MACjB,IAAIA,EAAE,KAAK,CAAC,CAAC,IAAIF,KAAK,CAACC,aAAa,KAAK,IAAI,EAAE;QAC3CE,QAAQ,CAACH,KAAK,CAACI,iBAAiB,CAAC;MACrC;IACJ,CACJ,CAAC;IACD,MAAMC,YAAY,GAAGR,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMM,QAAQ,GAAG,MAAOC,iBAAiB,IAAK;MAC1C;MACA,IAAIE,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,0CAA0C,GAAGH,iBAAiB,CAAC;MACzF,IAAII,IAAI,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,eAAe;MACxC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAC9B;QACA,IAAIH,IAAI,CAACG,CAAC,CAAC,CAACE,YAAY,KAAK,CAAC,EAAE;UAC5B,IAAIC,IAAI,GAAG,MAAMf,KAAK,CAACQ,GAAG,CAAC,kCAAkC,GAAGC,IAAI,CAACG,CAAC,CAAC,CAACI,aAAa,CAAC;UACtFP,IAAI,CAACG,CAAC,CAAC,CAACK,QAAQ,GAAGF,IAAI,CAACL,IAAI,CAACA,IAAI,CAACQ,WAAW;QACjD;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAZ,YAAY,CAACa,KAAK,GAAGV,IAAI;IAC7B,CAAC;IACD,MAAMW,WAAW,GAAGA,CAAA,KAAM;MACtBC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC;IACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}