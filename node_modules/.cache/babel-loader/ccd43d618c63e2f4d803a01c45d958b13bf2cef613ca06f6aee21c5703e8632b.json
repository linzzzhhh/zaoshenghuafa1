{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport axios from \"@/util/axios\";\nimport { ElMessage } from \"element-plus\";\n\n// 定义父组件传递的参数，并初始化\n\nexport default {\n  __name: 'add',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'initList'],\n  setup(__props, {\n    expose: __expose,\n    emit: emits\n  }) {\n    __expose();\n    const props = __props;\n\n    // 初始化表单控件\n    const formRef = ref(null);\n\n    // 初始化表单元素的数据\n    const form = ref({\n      id: null,\n      name: \"\",\n      password: \"\",\n      surveyQuestonIds: \"0\",\n      published: \"未发布\",\n      userId: 0\n    });\n\n    // 定义表单验证规则\n    const rules = ref({\n      name: [{\n        required: true,\n        message: '请输入问卷名称！'\n      }]\n    });\n\n    // 监听本页面dialogVisible（是否可见）值的变化\n    watch(() => props.dialogVisible, () => {\n      // 表单数据置空\n      form.value = {\n        id: null,\n        name: \"\",\n        password: \"\",\n        surveyQuestonIds: \"0\",\n        published: \"未发布\",\n        userId: 0\n      };\n    });\n\n    // 定义要调用的父组件的方法\n\n    /**\r\n     * 点击提交时调用\r\n     */\n    const handleAdd = () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 向后端发送新增数据请求\n            let res = await axios.post('/api/survey-assembly/add', form.value);\n            console.log(res);\n            if (res.data.success === true) {\n              ElMessage.success(\"执行成功！\");\n              // 重置表单\n              formRef.value.resetFields();\n              // 刷新父组件表格数据\n              emits('initList');\n              // 关闭该弹窗\n              handleClose();\n            } else {\n              ElMessage.error(res.data.msg);\n            }\n          } catch (err) {\n            console.log(\"error:\" + err);\n            ElMessage.error(\"系统错误，请联系管理员\");\n          }\n        } else {\n          console.log(\"error:\" + err);\n          ElMessage.error(\"系统错误，请联系管理员\");\n        }\n      });\n    };\n\n    /**\r\n     * 点击关闭或取消时调用\r\n     */\n    const handleClose = () => {\n      // 重置表单\n      formRef.value.resetFields();\n      // 设置dialogVisible为不可见\n      emits('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      formRef,\n      form,\n      rules,\n      emits,\n      handleAdd,\n      handleClose,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","axios","ElMessage","formRef","form","id","name","password","surveyQuestonIds","published","userId","rules","required","message","props","dialogVisible","value","handleAdd","validate","valid","res","post","console","log","data","success","resetFields","emits","handleClose","error","msg","err"],"sources":["D:/vue_project/survey/src/views/assembly/components/add.vue"],"sourcesContent":["<template>\r\n  <el-dialog\r\n    model-value=\"dialogVisible\"\r\n    title=\"添加\"\r\n    width=\"40%\"\r\n    @close=\"handleClose\"\r\n  >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"150px\"\r\n      >\r\n          <el-form-item label=\"问卷名称\" prop=\"name\">\r\n              <el-input v-model=\"form.name\"/>\r\n          </el-form-item>\r\n          <el-form-item label=\"问卷密码\" prop=\"password\">\r\n              <el-input v-model=\"form.password\"/>\r\n          </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n          <span class=\"dialog-footer\">\r\n              <el-button @click=\"handleClose\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"handleAdd\">提交</el-button>\r\n          </span>\r\n      </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n// 定义父组件传递的参数，并初始化\r\nconst props = defineProps(\r\n    {\r\n      dialogVisible: {\r\n        type: Boolean,\r\n        default: false,\r\n        required: true\r\n      }\r\n    }\r\n)\r\n\r\n// 初始化表单控件\r\nconst formRef = ref(null);\r\n\r\n// 初始化表单元素的数据\r\nconst form = ref({\r\n    id: null,\r\n    name: \"\",\r\n    password: \"\",\r\n    surveyQuestonIds: \"0\",\r\n    published: \"未发布\",\r\n    userId: 0\r\n})\r\n\r\n// 定义表单验证规则\r\nconst rules = ref({\r\n    name: [\r\n        {\r\n            required: true,\r\n            message: '请输入问卷名称！'\r\n        }\r\n    ]\r\n})\r\n\r\n// 监听本页面dialogVisible（是否可见）值的变化\r\nwatch(\r\n    ()=>props.dialogVisible,\r\n    ()=>{\r\n        // 表单数据置空\r\n        form.value = {\r\n            id: null,\r\n            name: \"\",\r\n            password: \"\",\r\n            surveyQuestonIds: \"0\",\r\n            published: \"未发布\",\r\n            userId: 0\r\n        }\r\n    }\r\n)\r\n\r\n// 定义要调用的父组件的方法\r\nconst emits = defineEmits(['update:modelValue','initList']);\r\n\r\n/**\r\n * 点击提交时调用\r\n */\r\nconst handleAdd = () => {\r\n    formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n            try {\r\n                // 向后端发送新增数据请求\r\n                let res = await axios.post('/api/survey-assembly/add', form.value);\r\n                console.log(res)\r\n                if (res.data.success === true) {\r\n                    ElMessage.success(\"执行成功！\");\r\n                    // 重置表单\r\n                    formRef.value.resetFields();\r\n                    // 刷新父组件表格数据\r\n                    emits('initList');\r\n                    // 关闭该弹窗\r\n                    handleClose();\r\n                } else {\r\n                    ElMessage.error(res.data.msg);\r\n                }\r\n            } catch (err) {\r\n                console.log(\"error:\"+err);\r\n                ElMessage.error(\"系统错误，请联系管理员\");\r\n            }\r\n        } else {\r\n            console.log(\"error:\"+err);\r\n            ElMessage.error(\"系统错误，请联系管理员\");\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * 点击关闭或取消时调用\r\n */\r\nconst handleClose = () => {\r\n  // 重置表单\r\n  formRef.value.resetFields();\r\n  // 设置dialogVisible为不可见\r\n  emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA8BA,SAAkCA,GAAG,EAAEC,KAAK,QAAO,KAAK;AACxD,OAAOC,KAAK,MAAM,cAAc;AAChC,SAAQC,SAAS,QAAO,cAAc;;AAEtC;;;;;;;;;;;;;;;;;;;IAWA;IACA,MAAMC,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMK,IAAI,GAAGL,GAAG,CAAC;MACbM,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,GAAG;MACrBC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAK,GAAGZ,GAAG,CAAC;MACdO,IAAI,EAAE,CACF;QACIM,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC;IAET,CAAC,CAAC;;IAEF;IACAb,KAAK,CACD,MAAIc,KAAK,CAACC,aAAa,EACvB,MAAI;MACA;MACAX,IAAI,CAACY,KAAK,GAAG;QACTX,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,gBAAgB,EAAE,GAAG;QACrBC,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE;MACZ,CAAC;IACL,CACJ,CAAC;;IAED;;IAGA;AACA;AACA;IACA,MAAMO,SAAS,GAAGA,CAAA,KAAM;MACpBd,OAAO,CAACa,KAAK,CAACE,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACpC,IAAIA,KAAK,EAAE;UACP,IAAI;YACA;YACA,IAAIC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,0BAA0B,EAAEjB,IAAI,CAACY,KAAK,CAAC;YAClEM,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;YAChB,IAAIA,GAAG,CAACI,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;cAC3BvB,SAAS,CAACuB,OAAO,CAAC,OAAO,CAAC;cAC1B;cACAtB,OAAO,CAACa,KAAK,CAACU,WAAW,CAAC,CAAC;cAC3B;cACAC,KAAK,CAAC,UAAU,CAAC;cACjB;cACAC,WAAW,CAAC,CAAC;YACjB,CAAC,MAAM;cACH1B,SAAS,CAAC2B,KAAK,CAACT,GAAG,CAACI,IAAI,CAACM,GAAG,CAAC;YACjC;UACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;YACVT,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACQ,GAAG,CAAC;YACzB7B,SAAS,CAAC2B,KAAK,CAAC,aAAa,CAAC;UAClC;QACJ,CAAC,MAAM;UACHP,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACQ,GAAG,CAAC;UACzB7B,SAAS,CAAC2B,KAAK,CAAC,aAAa,CAAC;QAClC;MACJ,CAAC,CAAC;IACN,CAAC;;IAED;AACA;AACA;IACA,MAAMD,WAAW,GAAGA,CAAA,KAAM;MACxB;MACAzB,OAAO,CAACa,KAAK,CAACU,WAAW,CAAC,CAAC;MAC3B;MACAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC;IACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}