{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    \"model-value\": \"dialogVisible\",\n    title: \"选项管理\",\n    width: \"50%\",\n    onClose: $setup.handleClose,\n    center: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"formRef\",\n      model: $setup.form,\n      rules: $setup.rules,\n      \"label-width\": \"100px\",\n      style: {\n        \"text-align\": \"center\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"选项内容\",\n        prop: \"item\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          placeholder: \"格式如：A、学生\",\n          modelValue: $setup.form.item,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.item = $event),\n          style: {\n            \"width\": \"100px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleAddItem\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"添加\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"]), _createTextVNode(\" 请选择要加入该题目的选项： \"), _createVNode(_component_el_table, {\n      data: $setup.tableData,\n      stripe: \"\",\n      onSelectionChange: $setup.handleSelectionChange,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 复选框 \"), _createVNode(_component_el_table_column, {\n        type: \"selection\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"50\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"item\",\n        label: \"选项内容\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"action\",\n        label: \"操作\",\n        width: \"100\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"danger\",\n          icon: $setup.Delete,\n          disabled: \"\",\n          onClick: $event => $setup.handleDelete(scope.row.id)\n        }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleChangeItems\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确定选项\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_dialog","title","width","onClose","$setup","handleClose","center","_createVNode","_component_el_form","ref","model","form","rules","style","_component_el_form_item","label","prop","_component_el_input","placeholder","item","$event","_component_el_button","type","onClick","handleAddItem","_component_el_table","data","tableData","stripe","onSelectionChange","handleSelectionChange","_createCommentVNode","_component_el_table_column","scope","icon","Delete","disabled","handleDelete","row","id","handleChangeItems"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\question\\components\\editItems.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n        model-value=\"dialogVisible\"\r\n        title=\"选项管理\"\r\n        width=\"50%\"\r\n        @close=\"handleClose\"\r\n        center\r\n    >\r\n        <el-form\r\n            ref=\"formRef\"\r\n            :model=\"form\"\r\n            :rules=\"rules\"\r\n            label-width=\"100px\"\r\n            style=\"text-align: center\"\r\n        >\r\n            <el-form-item label=\"选项内容\" prop=\"item\">\r\n                <el-input placeholder=\"格式如：A、学生\" v-model=\"form.item\" style=\"width: 100px\"/>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleAddItem\">添加</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        请选择要加入该题目的选项：\r\n        <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\" style=\"width: 100%\">\r\n            <!-- 复选框 -->\r\n            <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"50\" />\r\n            <el-table-column prop=\"item\" label=\"选项内容\" width=\"200\" />\r\n            <el-table-column prop=\"action\" label=\"操作\" width=\"100\" >\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"danger\" :icon=\"Delete\" disabled\r\n                               @click=\"handleDelete(scope.row.id)\"></el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-button type=\"primary\" @click=\"handleChangeItems\">确定选项</el-button>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, ref, watch} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport {Delete} from '@element-plus/icons-vue'\r\n\r\nconst props = defineProps(\r\n    {\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: true\r\n        },\r\n        id: {\r\n            type: Number,\r\n            default: -1,\r\n            required: true\r\n        }\r\n    }\r\n);\r\nconst formRef = ref(null);\r\nconst form = ref({\r\n    id: null,\r\n    item: \"\",\r\n    userId: 0\r\n});\r\nconst rules = ref({\r\n    item: [\r\n        {\r\n            required: true,\r\n            message: '请输入选项内容'\r\n        }\r\n    ],\r\n});\r\nconst tableData = ref([]);\r\nconst initItemList = async () => {\r\n    const res = await axios.get('/api/survey-item/all');\r\n    tableData.value = res.data.data.surveyItems;\r\n};\r\nwatch(\r\n    () => props.dialogVisible,\r\n    () => {\r\n        if (props.dialogVisible === true) {\r\n            initItemList();\r\n        }\r\n    },\r\n);\r\nconst emits = defineEmits(['update:modelValue']);\r\nconst handleAddItem = async () => {\r\n    formRef.value.validate(async(valid)=>{\r\n        if(valid){\r\n            let res = await axios.post('/api/survey-item/add', form.value);\r\n            if (res.data.success === true) {\r\n                ElMessage.success(\"执行成功！\");\r\n                formRef.value.resetFields();\r\n                initItemList();\r\n            } else {\r\n                ElMessage.error(res.data.msg);\r\n            }\r\n        }\r\n    })\r\n}\r\nconst addItemIds = ref(\"0\");\r\nconst handleSelectionChange = (val) => {\r\n    let idList = val.map((item,index) =>{\r\n        return item.id;\r\n    });\r\n    if (idList.length === 0) {\r\n        addItemIds.value = \"0\";\r\n        return;\r\n    }\r\n    let itemIds = \"\";\r\n    idList.forEach((item, index)=>{\r\n        itemIds += item;\r\n        if (index !== idList.length-1) {\r\n            itemIds += \",\";\r\n        }\r\n    })\r\n    console.log(itemIds);\r\n    addItemIds.value = itemIds;\r\n}\r\nconst question = ref({});\r\nconst initData = async (id) => {\r\n    const res = await axios.get('/api/survey-question/one/' + id);\r\n    question.value = res.data.data.surveyQuestion;\r\n}\r\ninitData(props.id);\r\nconst handleChangeItems = () => {\r\n    question.value.surveyItemIds = addItemIds.value;\r\n    formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n            let res = await axios.post('/api/survey-question/edit', question.value);\r\n            if (res.data.success === true) {\r\n                ElMessage.success(\"执行成功！\");\r\n                formRef.value.resetFields();\r\n                emits('initList');\r\n                handleClose();\r\n            } else {\r\n                ElMessage.error(res.data.msg);\r\n            }\r\n        } else {\r\n            console.log(\"error:\"+err);\r\n            ElMessage.error(\"系统错误，请联系管理员\");\r\n        }\r\n    });\r\n}\r\nconst handleDelete = (id) =>{\r\n    ElMessageBox.confirm(\r\n        '您确定要删除这条记录吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    )\r\n        .then(async() => {\r\n            let res=await axios.get('/api/survey-item/delete/'+id)\r\n            if(res.data.success === true){\r\n                ElMessage({\r\n                    type: 'success',\r\n                    message: '删除成功',\r\n                });\r\n                initItemList();\r\n            }else{\r\n                ElMessage({\r\n                    type: 'error',\r\n                    message: res.data.msg,\r\n                });\r\n            }\r\n        })\r\n        .catch(() => {\r\n        })\r\n}\r\nconst handleClose = () => {\r\n    formRef.value.resetFields();\r\n    form.value = {\r\n        id: null,\r\n        item: \"\",\r\n        userId: 0\r\n    };\r\n    emits('update:modelValue', false);\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;;;;;;;;uBACIA,YAAA,CAmCYC,oBAAA;IAlCR,aAAW,EAAC,eAAe;IAC3BC,KAAK,EAAC,MAAM;IACZC,KAAK,EAAC,KAAK;IACVC,OAAK,EAAEC,MAAA,CAAAC,WAAW;IACnBC,MAAM,EAAN;;sBAEA,MAaU,CAbVC,YAAA,CAaUC,kBAAA;MAZNC,GAAG,EAAC,SAAS;MACZC,KAAK,EAAEN,MAAA,CAAAO,IAAI;MACXC,KAAK,EAAER,MAAA,CAAAQ,KAAK;MACb,aAAW,EAAC,OAAO;MACnBC,KAA0B,EAA1B;QAAA;MAAA;;wBAEA,MAEe,CAFfN,YAAA,CAEeO,uBAAA;QAFDC,KAAK,EAAC,MAAM;QAACC,IAAI,EAAC;;0BAC5B,MAA2E,CAA3ET,YAAA,CAA2EU,mBAAA;UAAjEC,WAAW,EAAC,UAAU;sBAAUd,MAAA,CAAAO,IAAI,CAACQ,IAAI;qEAATf,MAAA,CAAAO,IAAI,CAACQ,IAAI,GAAAC,MAAA;UAAEP,KAAoB,EAApB;YAAA;UAAA;;;UAEzDN,YAAA,CAEeO,uBAAA;0BADX,MAA+D,CAA/DP,YAAA,CAA+Dc,oBAAA;UAApDC,IAAI,EAAC,SAAS;UAAEC,OAAK,EAAEnB,MAAA,CAAAoB;;4BAAe,MAAE,C,iBAAF,IAAE,E;;;;;;;;4DAEjD,iBAEV,GAAAjB,YAAA,CAWWkB,mBAAA;MAXAC,IAAI,EAAEtB,MAAA,CAAAuB,SAAS;MAAEC,MAAM,EAAN,EAAM;MAAEC,iBAAgB,EAAEzB,MAAA,CAAA0B,qBAAqB;MAAEjB,KAAmB,EAAnB;QAAA;MAAA;;wBACzE,MAAY,CAAZkB,mBAAA,SAAY,EACZxB,YAAA,CAA+DyB,0BAAA;QAA9CV,IAAI,EAAC,WAAW;QAACpB,KAAK,EAAC;UACxCK,YAAA,CAAmDyB,0BAAA;QAAlChB,IAAI,EAAC,IAAI;QAACD,KAAK,EAAC,IAAI;QAACb,KAAK,EAAC;UAC5CK,YAAA,CAAwDyB,0BAAA;QAAvChB,IAAI,EAAC,MAAM;QAACD,KAAK,EAAC,MAAM;QAACb,KAAK,EAAC;UAChDK,YAAA,CAKkByB,0BAAA;QALDhB,IAAI,EAAC,QAAQ;QAACD,KAAK,EAAC,IAAI;QAACb,KAAK,EAAC;;0BAC1B+B,KAAK,KACnB1B,YAAA,CAC2Dc,oBAAA;UADhDC,IAAI,EAAC,QAAQ;UAAEY,IAAI,EAAE9B,MAAA,CAAA+B,MAAM;UAAEC,QAAQ,EAAR,EAAQ;UACpCb,OAAK,EAAAH,MAAA,IAAEhB,MAAA,CAAAiC,YAAY,CAACJ,KAAK,CAACK,GAAG,CAACC,EAAE;;;;;;iCAIxDhC,YAAA,CAAqEc,oBAAA;MAA1DC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAEnB,MAAA,CAAAoC;;wBAAmB,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}