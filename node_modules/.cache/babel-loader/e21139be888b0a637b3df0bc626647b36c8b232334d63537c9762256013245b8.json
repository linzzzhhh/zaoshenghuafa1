{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20,\n      class: \"top\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        icon: $setup.DocumentAdd,\n        onClick: _cache[0] || (_cache[0] = $event => $setup.handleAddDialog())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"添加调查问题\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table, {\n      data: $setup.tableData,\n      stripe: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"content\",\n        label: \"问题\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"描述\",\n        width: \"250\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyCateId\",\n        label: \"分类ID\",\n        width: \"120\",\n        formatter: $setup.cateFormatter\n      }), _createVNode(_component_el_table_column, {\n        prop: \"surveyItemIds\",\n        label: \"选项ID\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"action\",\n        label: \"操作\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          icon: $setup.Edit,\n          onClick: $event => $setup.handleEditDialog(scope.row.id)\n        }, null, 8 /* PROPS */, [\"icon\", \"onClick\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          icon: $setup.Edit,\n          disabled: scope.row.surveyCateId === 1 ? false : true,\n          onClick: $event => $setup.handleEditItemsDialog(scope.row.id)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 编辑选项 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"icon\", \"disabled\", \"onClick\"]), _createVNode(_component_el_button, {\n          type: \"danger\",\n          icon: $setup.Delete,\n          onClick: $event => $setup.handleDelete(scope.row.id)\n        }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"AddDialog\"], {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible = $event),\n    dialogVisible: $setup.dialogVisible,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"dialogVisible\"]), _createVNode($setup[\"EditDialog\"], {\n    modelValue: $setup.dialogVisible2,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogVisible2 = $event),\n    id: $setup.questionId,\n    dialogVisible: $setup.dialogVisible2,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"dialogVisible\"]), _createVNode($setup[\"EditItemsDialog\"], {\n    modelValue: $setup.dialogVisible3,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.dialogVisible3 = $event),\n    id: $setup.questionId,\n    dialogVisible: $setup.dialogVisible3,\n    onInitList: $setup.initList\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"dialogVisible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_el_card","_component_el_row","gutter","class","_component_el_button","type","icon","$setup","DocumentAdd","onClick","_cache","$event","handleAddDialog","_component_el_table","data","tableData","stripe","style","_component_el_table_column","prop","label","width","formatter","cateFormatter","scope","Edit","handleEditDialog","row","id","disabled","surveyCateId","handleEditItemsDialog","Delete","handleDelete","dialogVisible","onInitList","initList","dialogVisible2","questionId","dialogVisible3"],"sources":["D:\\vue_project\\survey-vue\\src\\views\\question\\index.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-row :gutter=\"20\" class=\"top\">\r\n            <el-button type=\"primary\" :icon=\"DocumentAdd\" @click=\"handleAddDialog()\">添加调查问题</el-button>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n            <el-table-column prop=\"content\" label=\"问题\" width=\"250\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" width=\"250\" />\r\n            <el-table-column prop=\"surveyCateId\" label=\"分类ID\" width=\"120\" :formatter=\"cateFormatter\"/>\r\n            <el-table-column prop=\"surveyItemIds\" label=\"选项ID\" width=\"120\" />\r\n            <el-table-column prop=\"action\" label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               @click=\"handleEditDialog(scope.row.id)\">\r\n                    </el-button>\r\n                    <el-button type=\"primary\" :icon=\"Edit\"\r\n                               :disabled=\"scope.row.surveyCateId === 1 ? false : true\"\r\n                               @click=\"handleEditItemsDialog(scope.row.id)\">\r\n                        编辑选项\r\n                    </el-button>\r\n                    <el-button type=\"danger\" :icon=\"Delete\"\r\n                               @click=\"handleDelete(scope.row.id)\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n    <AddDialog v-model=\"dialogVisible\"\r\n               :dialogVisible=\"dialogVisible\"\r\n               @initList=\"initList\"\r\n    ></AddDialog>\r\n    <EditDialog v-model=\"dialogVisible2\"\r\n                :id=\"questionId\"\r\n                :dialogVisible=\"dialogVisible2\"\r\n                @initList=\"initList\"\r\n    ></EditDialog>\r\n    <EditItemsDialog v-model=\"dialogVisible3\"\r\n                :id=\"questionId\"\r\n                :dialogVisible=\"dialogVisible3\"\r\n                @initList=\"initList\"\r\n    ></EditItemsDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {Delete, DocumentAdd, Edit} from \"@element-plus/icons-vue\";\r\nimport {ref} from \"vue\";\r\nimport axios from \"@/util/axios\";\r\nimport AddDialog from \"@/views/question/components/add\";\r\nimport EditDialog from \"@/views/question/components/edit\";\r\nimport EditItemsDialog from \"@/views/question/components/editItems\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\n\r\n// 数据定义\r\nconst tableData = ref([]); // 表格数据\r\nconst dialogVisible = ref(false); // 控制AddDialog是否可见\r\nconst dialogVisible2 = ref(false); // 控制EditDialog是否可见\r\nconst dialogVisible3 = ref(false); // 控制EditItemsDialog（编辑题目选项界面）是否可见\r\nconst questionId = ref(-1); // 题目ID，用于EditDialog、EditItemsDialog的数据初始化\r\n\r\n/**\r\n * 获取表格数据\r\n * @returns {Promise<void>}\r\n */\r\nconst initList = async () => {\r\n    // 请求数据\r\n    const res = await axios.get('/api/survey-question/all');\r\n    // 赋值给tableData\r\n    tableData.value = res.data.data.surveyQuestions;\r\n}\r\ninitList();\r\n\r\n/**\r\n * 点击添加时调用，使AddDialog可见（即弹出新增数据页面）\r\n */\r\nconst handleAddDialog = () => {\r\n    // 使AddDialog可见\r\n    dialogVisible.value = true;\r\n}\r\n\r\n/**\r\n * 点击修改时调用，使EditDialog可见（即弹出修改数据页面）\r\n * @param id\r\n */\r\nconst handleEditDialog = (id) => {\r\n    // 将触发时所在行的id赋值给questionId\r\n    questionId.value = id;\r\n    // 使EditDialog可见\r\n    dialogVisible2.value = true;\r\n}\r\n\r\n/**\r\n * 点击编辑选项时调用，使EditItemsDialog可见（即弹出编辑选项页面）\r\n * @param id\r\n */\r\nconst handleEditItemsDialog = (id) => {\r\n    // 将触发时所在行的id赋值给questionId\r\n    questionId.value = id;\r\n    // 使EditItemsDialog可见\r\n    dialogVisible3.value = true;\r\n}\r\n\r\n/**\r\n * 将类型ID翻译成对应的类型名称\r\n */\r\nconst cateFormatter = (row) => {\r\n    switch (row.surveyCateId) {\r\n        case 1:\r\n            return \"单选题\"\r\n        case 2:\r\n            return \"多选题\"\r\n        case 3:\r\n            return \"判断题\"\r\n        default:\r\n            return \"简答题\"\r\n    }\r\n}\r\n\r\n/**\r\n * 点击删除时调用\r\n * @param id\r\n */\r\nconst handleDelete = (id) => {\r\n    ElMessageBox.confirm(\r\n        '确定要删除吗？',\r\n        '系统提示',\r\n        {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n        }\r\n    ).then(async () => {\r\n        // 向后端发送删除请求\r\n        let res = await axios.get('/api/survey-question/delete/' + id)\r\n        if (res.data.success === true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '删除成功',\r\n            })\r\n            // 请求成功后刷新表格数据\r\n            initList();\r\n        } else {\r\n            ElMessage({\r\n                type: 'error',\r\n                message: res.data.msg,\r\n            })\r\n        }\r\n    }).catch(() => {\r\n\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.top {\r\n  padding-bottom: 30px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}